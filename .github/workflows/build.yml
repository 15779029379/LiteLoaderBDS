name: Build LiteLoader

on: [push]

env:
  SOLUTION_FILE_PATH: .
  BUILD_CONFIGURATION: Release
  Platform: X64
  ChakraCore_version: cc_windows_all_1_11_24

jobs:
  Build-Library:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Download Bedrock Server
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: |
          mkdir Tools/Server
          ServerLink=$(cat 'Scripts/LINK.txt')
          curl -L -o Tools/Server/server.zip "$ServerLink"
          unzip Tools/Server/server.zip -d Tools/Server/ > /dev/null
        shell: bash

      - name: Build Library
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: |
          cd Tools
          LibraryBuilder.exe Server
        shell: cmd

      - name: Temporarily Save Libs
        uses: actions/upload-artifact@v2
        with:
          name: libs
          path: LiteLoader/Lib

  Build-LiteLoader-N-Lua:
    runs-on: windows-2022
    needs: Build-Library

    steps:
      - uses: actions/checkout@v2

      - name: Retrieve Saved Libs
        uses: actions/download-artifact@v2
        with:
          name: libs
          path: LiteLoader/Lib/

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1

      - name: Change LITELOADER_VERSION_STATUS
        working-directory: ${{env.GITHUB_WORKSPACE}}
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          sed -i 's/Beta/Release/g' LiteLoader/Main/Version.h
        shell: bash

      - name: Build
        working-directory: ${{env.GITHUB_WORKSPACE}}
        id: build
        run: |
          MSBuild.exe ./LiteLoader.sln -property:Configuration=Release -property:Configuration=Lua
        shell: bash

      - name: Pack Release
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: |
          cd Scripts
          ./PackRelease.cmd action
          ./PackSDK.cmd
        shell: cmd

      - name: Update LiteLoaderSDK
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          cd Scripts
          ./UploadSDK.cmd action
        env:
          REPO_KEY: ${{secrets.PUSH_TOKEN}}
          USERNAME: github-actions[bot]
        shell: cmd

      - name: Upload LiteLoader
        uses: actions/upload-artifact@v2
        with:
          name: LiteLoader
          path: Release

      - name: Upload LiteLoader SDK
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v2
        with:
          name: LiteLoaderSDK
          path: LiteLoaderSDK

  Build-LiteLoader-Js:
    runs-on: windows-2022
    needs: Build-Library

    steps:
      - uses: actions/checkout@v2

      - name: Retrieve Saved Libs
        uses: actions/download-artifact@v2
        with:
          name: libs
          path: LiteLoader/Lib/

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1

      - name: Build
        working-directory: ${{env.GITHUB_WORKSPACE}}
        id: build
        run: |
          MSBuild.exe ./LiteLoader.sln -property:Configuration=Js
        shell: bash

      - name: Pack Release
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: |
          cd Scripts
          ./PackRelease.cmd action
        shell: cmd

      - name: Upload LiteLoader-Js
        uses: actions/upload-artifact@v2
        with:
          name: LiteLoader
          path: RELEASE

  Publish-Release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [Build-LiteLoader-N-Lua, Build-LiteLoader-Js]
    steps:
      - uses: actions/checkout@v2

      - name: Retrieve Saved LiteLoader
        uses: actions/download-artifact@v2
        with:
          name: LiteLoader
          path: RELEASE

      - name: Retrieve Saved LiteLoader SDK
        uses: actions/download-artifact@v2
        with:
          name: LiteLoaderSDK
          path: LiteLoaderSDK

      - name: Prepare for creating Release
        working-directory: ${{env.GITHUB_WORKSPACE}}
        id: rel
        run: |
          echo ::set-output name=tag::${GITHUB_REF#refs/*/}
          zip -r LiteLoader.zip LiteLoader
          zip -r LiteLoader-SDK.zip LiteLoaderSDK
          mv LiteLoader.zip LiteLoader-${GITHUB_REF#refs/*/}.zip
        shell: bash

      - name: Create New Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: ${{ github.workspace }}/CHANGELOG.txt
          files: |
            ${{ github.workspace }}/LiteLoader-${{ steps.rel.outputs.tag }}.zip
            ${{ github.workspace }}/LiteLoader-SDK.zip
        env:
          GITHUB_REPOSITORY: LiteLDev/LiteLoaderBDS

  Clean:
    runs-on: ubuntu-latest
    if: ${{ always() }} # 防止前面三者跑着跑着报错，这一步骤不执行导致libs删不掉的现象发生
    steps:
      - uses: geekyeggo/delete-artifact@v1
        with:
          name: libs