/**
 * @file  ActorAnimationControllerState.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class ActorAnimationControllerState.
 *
 */
class ActorAnimationControllerState {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_ACTORANIMATIONCONTROLLERSTATE
public:
    class ActorAnimationControllerState& operator=(class ActorAnimationControllerState const &) = delete;
    ActorAnimationControllerState(class ActorAnimationControllerState const &) = delete;
    ActorAnimationControllerState() = delete;
#endif

public:
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_ACTORANIMATIONCONTROLLERSTATE
#endif
    MCAPI void addAnimation(class HashedString const &);
    MCAPI void addAnimation(class HashedString const &, class ExpressionNode const &);
    MCAPI void addBlendTransitionKeyFrame(float, float);
    MCAPI class ActorAnimationEvent & addEntryActorEvent(float, std::string const &, enum CurrentCmdVersion, enum MolangVersion);
    MCAPI class ActorAnimationEvent & addExitActorEvent(float, std::string const &, enum CurrentCmdVersion, enum MolangVersion);
    MCAPI class ActorParticleEffect & addParticleEffect();
    MCAPI class ActorSoundEffect & addSoundEffect();
    MCAPI void addTransition(std::string const &, std::string const &, enum MolangVersion, bool);
    MCAPI class StateAnimationVariable & addVariable(std::string const &);
    MCAPI void setBlendTransitionTime(float);

};