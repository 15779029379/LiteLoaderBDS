// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#include "ActorDamageSource.hpp"
#define EXTRA_INCLUDE_PART_ACTORDAMAGEBYCHILDACTORSOURCE
#include "Extra/ActorDamageByChildActorSourceAPI.hpp"
#undef EXTRA_INCLUDE_PART_ACTORDAMAGEBYCHILDACTORSOURCE
class ActorDamageByChildActorSource : public ActorDamageSource {
#include "Extra/ActorDamageByChildActorSourceAPI.hpp"
public:
    virtual ~ActorDamageByChildActorSource();
    virtual bool isChildEntitySource() const;
    virtual bool isChildEntitySource() const;
    virtual void unk_vfn_3();
    virtual struct std::pair<std::string, std::vector<std::string>> getDeathMessage(std::string, class Actor*) const;
    virtual void unk_vfn_6();
    virtual void unk_vfn_7();
    virtual void unk_vfn_8();
    virtual void unk_vfn_9();
    virtual void unk_vfn_10();
    virtual bool getDamagingEntityIsCreative() const;
    virtual bool getDamagingEntityIsWorldBuilder() const;
    virtual struct ActorUniqueID getDamagingEntityUniqueID() const;
    virtual int /*enum ActorType*/ getDamagingEntityType() const;
    virtual int /*enum ActorCategory*/ getDamagingEntityCategories() const;
    virtual std::unique_ptr<class ActorDamageSource> clone() const;
};