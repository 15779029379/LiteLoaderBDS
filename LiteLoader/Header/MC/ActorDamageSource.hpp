// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#define EXTRA_INCLUDE_PART_ACTORDAMAGESOURCE
#include "Extra/ActorDamageSourceAPI.hpp"
#undef EXTRA_INCLUDE_PART_ACTORDAMAGESOURCE
class ActorDamageSource {
#include "Extra/ActorDamageSourceAPI.hpp"
public:
    virtual ~ActorDamageSource();
    virtual bool isEntitySource() const;
    virtual bool isChildEntitySource() const;
    virtual bool isBlockSource() const;
    virtual bool isFire() const;
    virtual struct std::pair<std::string, std::vector<std::string>> getDeathMessage(std::string, class Actor*) const;
    virtual bool getIsCreative() const;
    virtual bool getIsWorldBuilder() const;
    virtual void unk_vfn_8();
    virtual void unk_vfn_9();
    virtual int /*enum ActorCategory*/ getEntityCategories() const;
    virtual bool getDamagingEntityIsCreative() const;
    virtual bool getDamagingEntityIsWorldBuilder() const;
    virtual struct ActorUniqueID getDamagingEntityUniqueID() const;
    virtual int /*enum ActorType*/ getDamagingEntityType() const;
    virtual int /*enum ActorCategory*/ getDamagingEntityCategories() const;
    virtual std::unique_ptr<class ActorDamageSource> clone() const;

public:
    MCAPI enum ActorDamageCause getCause() const;
    MCAPI void setCause(enum ActorDamageCause);

    MCAPI static enum ActorDamageCause lookupCause(std::string const&);
    MCAPI static std::string const& lookupCauseName(enum ActorDamageCause);
};