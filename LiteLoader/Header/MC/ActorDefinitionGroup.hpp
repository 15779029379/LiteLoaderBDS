// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#define EXTRA_INCLUDE_PART
#include "Extra/ActorDefinitionGroupAPI.hpp"
#undef EXTRA_INCLUDE_PART
class ActorDefinitionGroup {
#include "Extra/ActorDefinitionGroupAPI.hpp"
public:
    virtual ~ActorDefinitionGroup();

public:
    MCAPI void setComponentFactory(class ActorComponentFactory*);
    MCAPI class ActorDefinitionPtr tryGetDefinition(std::string const&);
    MCAPI class ActorDefinitionPtr tryGetDefinitionGroup(std::string const&, std::string const&);

    MCAPI static bool loadActorDefinitionIdentifier(class Json::Value const&, class SemVersion const&, std::string&);
    MCAPI static bool loadActorDefinitionRuntimeIdentifier(class Json::Value const&, class SemVersion const&, std::string&);
    MCAPI static bool tryReadEntityResourceFile(class PackInstance&, class Core::Path const&, class Json::Value&);

private:
    MCAPI void _getResources(class Level&);
    MCAPI bool _loadDefinitionFromJSON(class SemVersion const&, class SemVersion const&, enum CurrentCmdVersion const&, std::string const&, class Json::Value&, std::string const&, class Level&, enum LogArea);
    MCAPI void _loadTemplates(class Level&, std::string const&, struct DeserializeDataParams);
    MCAPI void _setupCommonResourceDefinitionMap(class ActorDefinition&, class Level&);
    MCAPI void _setupPropertyGroups(class Level&, class ActorDefinition const&);

protected:
    MCAPI void _addRef(class ActorDefinitionPtr&);
    MCAPI void _removeRef(class ActorDefinitionPtr&);
};