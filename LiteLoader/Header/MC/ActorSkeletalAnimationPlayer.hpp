// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#define EXTRA_INCLUDE_PART_ACTORSKELETALANIMATIONPLAYER
#include "Extra/ActorSkeletalAnimationPlayerAPI.hpp"
#undef EXTRA_INCLUDE_PART_ACTORSKELETALANIMATIONPLAYER
class ActorSkeletalAnimationPlayer {
#include "Extra/ActorSkeletalAnimationPlayerAPI.hpp"
public:
    virtual ~ActorSkeletalAnimationPlayer();
    virtual void unk_vfn_1();
    virtual void resetAnimation();
    virtual void buildBoneToPartMapping(class AnimationComponent&);
    virtual void bindParticleEffects(class std::unordered_map<class HashedString, class HashedString, struct std::hash<class HashedString>, struct std::equal_to<class HashedString>, class std::allocator<struct std::pair<class HashedString const, class HashedString>>> const&);
    virtual void bindSoundEffects(class std::unordered_map<class HashedString, std::string, struct std::hash<class HashedString>, struct std::equal_to<class HashedString>, class std::allocator<struct std::pair<class HashedString const, std::string>>> const&);
    virtual bool hasAnimationFinished() const;
    virtual class std::shared_ptr<class ActorAnimationPlayer> findAnimation(class HashedString const&);
    virtual int /*enum ActorAnimationType*/ getAnimationType() const;
    virtual class HashedString const& getRawName() const;
};