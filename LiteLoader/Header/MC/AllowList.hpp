/**
 * @file  AllowList.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Json.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class AllowList.
 *
 */
class AllowList {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_ALLOWLIST
public:
    class AllowList& operator=(class AllowList const &) = delete;
    AllowList(class AllowList const &) = delete;
    AllowList() = delete;
#endif

public:
    virtual ~AllowList();
    virtual void serialize(class Json::Value &);
    virtual void deserialize(class Json::Value &);
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_ALLOWLIST
#endif
    MCAPI AllowList(class std::function<void (void)>);
    MCAPI bool addEntry(class AllowListEntry const &);
    MCAPI std::vector<class AllowListEntry> const & getEntries() const;
    MCAPI bool isAllowed(class mce::UUID const &, std::string const &) const;
    MCAPI bool isIgnoringPlayerLimit(class mce::UUID const &, std::string const &) const;
    MCAPI bool removeByName(std::string const &);
    MCAPI void tryUpdateEntries(class mce::UUID const &, std::string const &, std::string const &);

};