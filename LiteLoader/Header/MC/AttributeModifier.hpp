/**
 * @file  AttributeModifier.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here
enum AttributeModifierOperation : int {
    OPERATION_ADDITION = 0x0,
    OPERATION_MULTIPLY_BASE = 0x1,
    OPERATION_MULTIPLY_TOTAL = 0x2,
    OPERATION_CAP = 0x3,
    TOTAL_OPERATIONS = 0x4,
    OPERATION_INVALID = 0x4,
};

enum AttributeOperands : int {
    OPERAND_MIN = 0x0,
    OPERAND_MAX = 0x1,
    OPERAND_CURRENT = 0x2,
    TOTAL_OPERANDS = 0x3,
    OPERAND_INVALID = 0x3,
};
#undef BEFORE_EXTRA

/**
 * @brief MC class AttributeModifier.
 *
 */
class AttributeModifier {

#define AFTER_EXTRA
    // Add Member There
public:
    float mAmount;
    AttributeModifierOperation mOperation;
    AttributeOperands mOperand;
    string mName;
    mce::UUID mId;
    bool mSerialize;

#undef AFTER_EXTRA
public:
    virtual ~AttributeModifier();
    virtual bool isInstantaneous() const;
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_ATTRIBUTEMODIFIER
#endif
    MCAPI AttributeModifier();
    MCAPI AttributeModifier(class mce::UUID, std::string const &, float, enum AttributeModifierOperation, enum AttributeOperands, bool);
    MCAPI AttributeModifier(class mce::UUID, std::string const &, float, int, int, bool);
    MCAPI AttributeModifier(class AttributeModifier const &);
    MCAPI float getAmount() const;
    MCAPI class mce::UUID const & getId() const;
    MCAPI std::string const & getName() const;
    MCAPI int getOperand() const;
    MCAPI int getOperation() const;
    MCAPI bool isSerializable() const;
    MCAPI class AttributeModifier & operator=(class AttributeModifier const &);
    MCAPI bool operator==(class AttributeModifier const &) const;

//private:

private:
MCAPI static class mce::UUID const mInvalidUUID;

};