/**
 * @file  AutomationPlayerCommandOrigin.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Json.hpp"
#include "PlayerCommandOrigin.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class AutomationPlayerCommandOrigin.
 *
 */
class AutomationPlayerCommandOrigin : public PlayerCommandOrigin {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_AUTOMATIONPLAYERCOMMANDORIGIN
public:
    class AutomationPlayerCommandOrigin& operator=(class AutomationPlayerCommandOrigin const &) = delete;
    AutomationPlayerCommandOrigin(class AutomationPlayerCommandOrigin const &) = delete;
    AutomationPlayerCommandOrigin() = delete;
#endif

public:
    virtual ~AutomationPlayerCommandOrigin();
    virtual std::string const & getRequestId() const;
    virtual std::string getName() const;
    virtual enum CommandPermissionLevel getPermissionsLevel() const;
    virtual std::unique_ptr<class CommandOrigin> clone() const;
    virtual bool hasChatPerms() const;
    virtual bool hasTellPerms() const;
    virtual class NetworkIdentifier const & getSourceId() const;
    virtual enum CommandOriginType getOriginType() const;
    virtual struct CommandOriginData toCommandOriginData() const;
    virtual class CompoundTag serialize() const;
    virtual bool isValid() const;
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_AUTOMATIONPLAYERCOMMANDORIGIN
#endif
    MCAPI AutomationPlayerCommandOrigin(struct ActorUniqueID, class Level &, std::string const &, enum CommandPermissionLevel, class NetworkIdentifier const &);
    MCAPI AutomationPlayerCommandOrigin(std::string const &, class Player &);

};