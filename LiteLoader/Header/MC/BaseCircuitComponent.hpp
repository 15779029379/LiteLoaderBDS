// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#define EXTRA_INCLUDE_PART_BASECIRCUITCOMPONENT
#include "Extra/BaseCircuitComponentAPI.hpp"
#undef EXTRA_INCLUDE_PART_BASECIRCUITCOMPONENT
class BaseCircuitComponent {
#include "Extra/BaseCircuitComponentAPI.hpp"
public:
    virtual ~BaseCircuitComponent();
    virtual int getStrength() const;
    virtual int getDirection() const;
    virtual void setStrength(int);
    virtual void setDirection(unsigned char);
    virtual void setConsumePowerAnyDirection(bool);
    virtual bool canConsumePowerAnyDirection() const;
    virtual void unk_vfn_7();
    virtual bool canStopPower() const;
    virtual void setStopPower(bool);
    virtual bool removeSource(class BlockPos const&, class BaseCircuitComponent const*);
    virtual bool addSource(class CircuitSceneGraph&, class CircuitTrackingInfo const&, int&, bool&);
    virtual bool allowConnection(class CircuitSceneGraph&, class CircuitTrackingInfo const&, bool&);
    virtual void checkLock(class CircuitSystem&, class BlockPos const&);
    virtual bool evaluate(class CircuitSystem&, class BlockPos const&);
    virtual void cacheValues(class CircuitSystem&, class BlockPos const&);
    virtual void updateDependencies(class CircuitSceneGraph&, class BlockPos const&);
    virtual void unk_vfn_17();
    virtual bool isHalfPulse() const;
    virtual bool hasSource(class BaseCircuitComponent&);
    virtual void unk_vfn_20();
    virtual bool isSecondaryPowered() const;
    virtual int /*enum CircuitComponentType*/ getCircuitComponentType() const;
    virtual int /*enum CircuitComponentType*/ getCircuitComponentGroupType() const;

protected:
    MCAPI bool trackPowerSource(class CircuitTrackingInfo const&, int, bool, int);
};