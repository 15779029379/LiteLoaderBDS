/**
 * @file  BaseCircuitComponent.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

// clang-format off
enum CircuitComponentType : uint64_t {
    UNDEFINED        = 0LL,
    CAPACITOR        = 1129530177LL,
    CONSUMER         = 1129530179LL,
    POWERED_BLOCK    = 1129533506LL,
    PRODUCER         = 1129533507LL,
    BASE             = 1129534275LL,
    TRANSPORTER      = 1129534546LL,
    COMPARATOR       = 1296253778LL,
    PULSE_CAPACITOR  = 1296257091LL,
    PISTON           = 1296257097LL,
    RAIL_TRANSPORTER = 1296257106LL,
    REPEATER         = 1296257618LL,
    REDSTONE_TORCH   = 1296258115LL,
};
// clang-format on

#undef BEFORE_EXTRA

/**
 * @brief MC class BaseCircuitComponent.
 *
 */
class BaseCircuitComponent {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_BASECIRCUITCOMPONENT
public:
    class BaseCircuitComponent& operator=(class BaseCircuitComponent const &) = delete;
    BaseCircuitComponent(class BaseCircuitComponent const &) = delete;
#endif

public:
    virtual ~BaseCircuitComponent();
    virtual int getStrength() const;
    virtual int getDirection() const;
    virtual void setStrength(int);
    virtual void setDirection(unsigned char);
    virtual void setConsumePowerAnyDirection(bool);
    virtual bool canConsumePowerAnyDirection() const;
    virtual bool canConsumerPower() const;
    virtual bool canStopPower() const;
    virtual void setStopPower(bool);
    virtual bool removeSource(class BlockPos const &, class BaseCircuitComponent const *);
    virtual bool addSource(class CircuitSceneGraph &, class CircuitTrackingInfo const &, int &, bool &);
    virtual bool allowConnection(class CircuitSceneGraph &, class CircuitTrackingInfo const &, bool &);
    virtual void checkLock(class CircuitSystem &, class BlockPos const &);
    virtual bool evaluate(class CircuitSystem &, class BlockPos const &);
    virtual void cacheValues(class CircuitSystem &, class BlockPos const &);
    virtual void updateDependencies(class CircuitSceneGraph &, class BlockPos const &);
    virtual void __unk_vfn_17();
    virtual bool isHalfPulse() const;
    virtual bool hasSource(class BaseCircuitComponent &);
    virtual void __unk_vfn_20();
    virtual bool isSecondaryPowered() const;
    virtual enum CircuitComponentType getCircuitComponentType() const;
    virtual enum CircuitComponentType getCircuitComponentGroupType() const;
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_BASECIRCUITCOMPONENT
    MCVAPI bool allowIndirect() const;
    MCVAPI bool hasChildrenSource() const;
#endif
    MCAPI BaseCircuitComponent();
    MCAPI bool hasDirectPower();
    MCAPI bool isRemoved() const;
    MCAPI void setRemoved();

//protected:
    MCAPI bool trackPowerSource(class CircuitTrackingInfo const &, int, bool, int);
    MCAPI bool trackPowerSourceDuplicates(class CircuitTrackingInfo const &, int, bool);

protected:

};