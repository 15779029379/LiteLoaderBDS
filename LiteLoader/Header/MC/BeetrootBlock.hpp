// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "CropBlock.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class BeetrootBlock : public CropBlock {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_BEETROOTBLOCK
public:
    class BeetrootBlock& operator=(class BeetrootBlock const&) = delete;
    BeetrootBlock(class BeetrootBlock const&) = delete;
    BeetrootBlock() = delete;
#endif

public:
    /*0*/ virtual ~BeetrootBlock();
    /*1*/ virtual bool isObstructingChests(class BlockSource&, class BlockPos const&) const;
    /*2*/ virtual class Vec3 randomlyModifyPosition(class BlockPos const&) const;
    /*3*/ virtual class AABB const& getAABB(class BlockSource const&, class BlockPos const&, class Block const&, class AABB&, bool) const;
    /*4*/ virtual void onProjectileHit(class BlockSource&, class BlockPos const&, class Actor const&) const;
    /*5*/ virtual void onLightningHit(class BlockSource&, class BlockPos const&) const;
    /*6*/ virtual void __unk_vfn_0();
    /*7*/ virtual void __unk_vfn_1();
    /*8*/ virtual void __unk_vfn_2();
    /*9*/ virtual class Block const& getStrippedBlock(class Block const&) const;
    /*10*/ virtual class CopperBehavior const* tryGetCopperBehavior() const;
    /*11*/ virtual void __unk_vfn_3();
    /*12*/ virtual void __unk_vfn_4();
    /*13*/ virtual void __unk_vfn_5();
    /*14*/ virtual void __unk_vfn_6();
    /*15*/ virtual void __unk_vfn_7();
    /*16*/ virtual void __unk_vfn_8();
    /*17*/ virtual void __unk_vfn_9();
    /*18*/ virtual void __unk_vfn_10();
    /*19*/ virtual void __unk_vfn_11();
    /*20*/ virtual void __unk_vfn_12();
    /*21*/ virtual void __unk_vfn_13();
    /*22*/ virtual void __unk_vfn_14();
    /*23*/ virtual void __unk_vfn_15();
    /*24*/ virtual void __unk_vfn_16();
    /*25*/ virtual void __unk_vfn_17();
    /*26*/ virtual void __unk_vfn_18();
    /*27*/ virtual void __unk_vfn_19();
    /*28*/ virtual void __unk_vfn_20();
    /*29*/ virtual void __unk_vfn_21();
    /*30*/ virtual void __unk_vfn_22();
    /*31*/ virtual void __unk_vfn_23();
    /*32*/ virtual void onFillBlock(class BlockSource&, class BlockPos const&, class Block const&) const;
    /*33*/ virtual int getDirectSignal(class BlockSource&, class BlockPos const&, int) const;
    /*34*/ virtual void __unk_vfn_24();
    /*35*/ virtual void __unk_vfn_25();
    /*36*/ virtual void __unk_vfn_26();
    /*37*/ virtual void __unk_vfn_27();
    /*38*/ virtual void handlePrecipitation(class BlockSource&, class BlockPos const&, float, float) const;
    /*39*/ virtual float getFlexibility(class BlockSource&, class BlockPos const&) const;
    /*40*/ virtual void __unk_vfn_28();
    /*41*/ virtual void __unk_vfn_29();
    /*42*/ virtual void transformOnFall(class BlockSource&, class BlockPos const&, class Actor*, float) const;
    /*43*/ virtual void onRedstoneUpdate(class BlockSource&, class BlockPos const&, int, bool) const;
    /*44*/ virtual void onMove(class BlockSource&, class BlockPos const&, class BlockPos const&) const;
    /*45*/ virtual void __unk_vfn_30();
    /*46*/ virtual void movedByPiston(class BlockSource&, class BlockPos const&) const;
    /*47*/ virtual void onStructureBlockPlace(class BlockSource&, class BlockPos const&) const;
    /*48*/ virtual void onStructureNeighborBlockPlace(class BlockSource&, class BlockPos const&) const;
    /*49*/ virtual void setupRedstoneComponent(class BlockSource&, class BlockPos const&) const;
    /*50*/ virtual void __unk_vfn_31();
    /*51*/ virtual void __unk_vfn_32();
    /*52*/ virtual void __unk_vfn_33();
    /*53*/ virtual void __unk_vfn_34();
    /*54*/ virtual void __unk_vfn_35();
    /*55*/ virtual void __unk_vfn_36();
    /*56*/ virtual void __unk_vfn_37();
    /*57*/ virtual bool mayPlace(class BlockSource&, class BlockPos const&, unsigned char) const;
    /*58*/ virtual void __unk_vfn_38();
    /*59*/ virtual void destroy(class BlockSource&, class BlockPos const&, class Block const&, class Actor*) const;
    /*60*/ virtual void __unk_vfn_39();
    /*61*/ virtual void __unk_vfn_40();
    /*62*/ virtual int getResourceCount(class Randomize&, class Block const&, int) const;
    /*63*/ virtual void __unk_vfn_41();
    /*64*/ virtual class Block const& getPlacementBlock(class Actor&, class BlockPos const&, unsigned char, class Vec3 const&, int) const;
    /*65*/ virtual void __unk_vfn_42();
    /*66*/ virtual void __unk_vfn_43();
    /*67*/ virtual void handleEntityInside(class BlockSource&, class BlockPos const&, class Actor*, class Vec3&) const;
    /*68*/ virtual void entityInside(class BlockSource&, class BlockPos const&, class Actor&) const;
    /*69*/ virtual int getExperienceDrop(class Random&) const;
    /*70*/ virtual void triggerEvent(class BlockSource&, class BlockPos const&, int, int) const;
    /*71*/ virtual void __unk_vfn_44();
    /*72*/ virtual float calcGroundFriction(struct IMobMovementProxy const&, class BlockPos const&) const;
    /*73*/ virtual void __unk_vfn_45();
    /*74*/ virtual void __unk_vfn_46();
    /*75*/ virtual int getComparatorSignal(class BlockSource&, class BlockPos const&, class Block const&, unsigned char) const;
    /*76*/ virtual void __unk_vfn_47();
    /*77*/ virtual void notifySpawnedAt(class BlockSource&, class BlockPos const&) const;
    /*78*/ virtual void __unk_vfn_48();
    /*79*/ virtual int getIconYOffset() const;
    /*80*/ virtual void __unk_vfn_49();
    /*81*/ virtual int getColor(class Block const&) const;
    /*82*/ virtual int getColor(class BlockSource&, class BlockPos const&, class Block const&) const;
    /*83*/ virtual int getColorAtPos(class BlockSource&, class BlockPos const&) const;
    /*84*/ virtual void __unk_vfn_50();
    /*85*/ virtual class AABB const& getVisualShape(class Block const&, class AABB&, bool) const;
    /*86*/ virtual int getVariant(class Block const&) const;
    /*87*/ virtual void __unk_vfn_51();
    /*88*/ virtual class Block const& getRenderBlock() const;
    /*89*/ virtual unsigned char getMappedFace(unsigned char, class Block const&) const;
    /*90*/ virtual enum Flip getFaceFlip(unsigned char, class Block const&) const;
    /*91*/ virtual void animateTick(class BlockSource&, class BlockPos const&, class Random&) const;
    /*92*/ virtual void __unk_vfn_52();
    /*93*/ virtual class Block const* tryLegacyUpgrade(unsigned short) const;
    /*94*/ virtual void __unk_vfn_53();
    /*95*/ virtual class Block const* tryGetInfested(class Block const&) const;
    /*96*/ virtual class Block const* tryGetUninfested(class Block const&) const;
    /*97*/ virtual void _addHardCodedBlockComponents();
    /*98*/ virtual void onRemove(class BlockSource&, class BlockPos const&) const;
    /*99*/ virtual void onExploded(class BlockSource&, class BlockPos const&, class Actor*) const;
    /*100*/ virtual void onStandOn(class EntityContext&, class BlockPos const&) const;
    /*101*/ virtual void onStepOn(class Actor&, class BlockPos const&) const;
    /*102*/ virtual void __unk_vfn_54();
    /*103*/ virtual void __unk_vfn_55();
    /*104*/ virtual void onPlace(class BlockSource&, class BlockPos const&) const;
    /*105*/ virtual void tick(class BlockSource&, class BlockPos const&, class Random&) const;
    /*106*/ virtual void __unk_vfn_56();
    /*107*/ virtual void __unk_vfn_57();
    /*108*/ virtual int getExtraRenderLayers() const;
    /*109*/ virtual class mce::Color getMapColor(class BlockSource&, class BlockPos const&) const;
    /*110*/ virtual void __unk_vfn_58();
    /*111*/ virtual void __unk_vfn_59();
    /*112*/ virtual class ItemInstance const getBaseSeed() const;
    /*113*/ virtual class ItemInstance const getBaseCrop() const;
    /*114*/ virtual int getCropNum(class Randomize&, int, int) const;
    MCAPI BeetrootBlock(std::string const&, int);

protected:

private:

};