// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class BehaviorTreeDescription {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_BEHAVIORTREEDESCRIPTION
public:
    class BehaviorTreeDescription& operator=(class BehaviorTreeDescription const&) = delete;
    BehaviorTreeDescription(class BehaviorTreeDescription const&) = delete;
    BehaviorTreeDescription() = delete;
#endif

public:
    /*0*/ virtual void __unk_vfn_0();
    /*1*/ virtual ~BehaviorTreeDescription();
    /*2*/ virtual void __unk_vfn_1();
    /*
    inline void serializeData(class Json::Value& a0) const{
        void (BehaviorTreeDescription::*rv)(class Json::Value&) const;
        *((void**)&rv) = dlsym("?serializeData@BehaviorTreeDescription@@UEBAXAEAVValue@Json@@@Z");
        return (this->*rv)(std::forward<class Json::Value&>(a0));
    }
    inline char const* getJsonName() const{
        char const* (BehaviorTreeDescription::*rv)() const;
        *((void**)&rv) = dlsym("?getJsonName@BehaviorTreeDescription@@UEBAPEBDXZ");
        return (this->*rv)();
    }
    inline  ~BehaviorTreeDescription(){
         (BehaviorTreeDescription::*rv)();
        *((void**)&rv) = dlsym("??1BehaviorTreeDescription@@UEAA@XZ");
        return (this->*rv)();
    }
    */

protected:

private:

};