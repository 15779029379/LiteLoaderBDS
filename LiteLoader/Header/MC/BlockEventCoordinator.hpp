// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"


#define BEFORE_EXTRA //DO NOT EDIT THIS LINE
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA //DO NOT EDIT THIS LINE

class BlockEventCoordinator {

#define AFTER_EXTRA //DO NOT EDIT THIS LINE
// Add Member There

#undef AFTER_EXTRA //DO NOT EDIT THIS LINE

public:
    /*0*/ virtual ~BlockEventCoordinator();


    MCAPI class BlockGameplayHandler& getBlockGameplayHandler();
    MCAPI void registerBlockGameplayHandler(std::unique_ptr<class BlockGameplayHandler>);
    MCAPI enum CoordinatorResult sendActorInsideBlockEvent(struct ActorInsideBlockEvent const&);
    MCAPI enum CoordinatorResult sendActorStandOnBlockEvent(struct ActorStandOnBlockEvent const&);
    MCAPI void sendBlockDestroyedByPlayer(class Player&, std::string, class BlockPos const&);
    MCAPI void sendBlockDestructionStarted(class Player&, class BlockPos const&);
    MCAPI void sendBlockDestructionStopped(class Player&, class BlockPos const&, int);
    MCAPI void sendBlockExploded(class BlockPos const&, class Block const&, class Actor*);
    MCAPI void sendBlockInteractedWith(class Player&, class BlockPos const&);
    MCAPI void sendBlockMovedByPiston(class BlockPos const&, class BlockPos const&, enum PistonState);
    MCAPI void sendBlockPatternPostEvent(struct BlockPatternEvent const&);
    MCAPI enum CoordinatorResult sendBlockPatternPreEvent(struct BlockPatternEvent const&);
    MCAPI void sendBlockPlacedByPlayer(class Player&, class Block const&, class BlockPos const&, bool);
    MCAPI enum CoordinatorResult sendChestBlockTryPairEvent(struct ChestBlockTryPairEvent const&);
    MCAPI enum CoordinatorResult sendExplosionStarted(struct ExplosionStartedEvent&);
    MCAPI enum CoordinatorResult sendPistonActionEvent(struct PistonActionEvent const&);
    MCAPI void sendUnknownBlockReceived(class Level&, struct NewBlockID const&, unsigned short);

protected:


private:

};