/**
 * @file  BlockGraphics.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class BlockGraphics.
 *
 */
class BlockGraphics {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_BLOCKGRAPHICS
public:
    class BlockGraphics& operator=(class BlockGraphics const &) = delete;
    BlockGraphics(class BlockGraphics const &) = delete;
    BlockGraphics() = delete;
#endif

public:
    /**
     * @symbol ?getBlockShape@BlockGraphics@@QEBA?AW4BlockShape@@XZ
     * @hash   1209377566
     */
    MCAPI enum BlockShape getBlockShape() const;
    /**
     * @symbol ?getIconTexture@BlockGraphics@@QEBAAEBUTextureUVCoordinateSet@@H@Z
     * @hash   -1127794021
     */
    MCAPI struct TextureUVCoordinateSet const & getIconTexture(int) const;
    /**
     * @symbol ?isFullAndOpaque@BlockGraphics@@QEBA_NXZ
     * @hash   419158398
     */
    MCAPI bool isFullAndOpaque() const;
MCAPI static float const SIZE_OFFSET;
    /**
     * @symbol ?getForBlock@BlockGraphics@@SAPEBV1@AEBVBlock@@@Z
     * @hash   1000996503
     */
    MCAPI static class BlockGraphics const * getForBlock(class Block const &);
    /**
     * @symbol ?getForBlock@BlockGraphics@@SAPEBV1@AEBVBlockLegacy@@@Z
     * @hash   -2144756587
     */
    MCAPI static class BlockGraphics const * getForBlock(class BlockLegacy const &);
    /**
     * @symbol ?isInitialized@BlockGraphics@@SA_NXZ
     * @hash   -1926061128
     */
    MCAPI static bool isInitialized();
MCAPI static class std::unordered_map<std::string, class BlockGraphics *, struct std::hash<std::string>, struct std::equal_to<std::string>, class std::allocator<struct std::pair<std::string const, class BlockGraphics *>>> mBlockLookupMap;
MCAPI static std::unique_ptr<class BlockGraphics> mDummyBlock;
MCAPI static std::vector<std::unique_ptr<class BlockGraphics>> mOwnedBlocks;
    /**
     * @symbol ?setAtlasItemManager@BlockGraphics@@SAXV?$shared_ptr@VAtlasItemManager@@@std@@@Z
     * @hash   1258220733
     */
    MCAPI static void setAtlasItemManager(class std::shared_ptr<class AtlasItemManager>);

//protected:

//private:

protected:
MCAPI static class std::weak_ptr<class AtlasItemManager> mTerrainTextureAtlas;

private:
MCAPI static class std::mutex mBlockModelAccess;
MCAPI static class std::unordered_map<unsigned int, class BlockGraphics *, struct std::hash<unsigned int>, struct std::equal_to<unsigned int>, class std::allocator<struct std::pair<unsigned int const, class BlockGraphics *>>> mBlocks;
MCAPI static bool mInitialized;
MCAPI static class std::map<std::string, std::unique_ptr<struct BlockGeometry::Model>, struct std::less<std::string>, class std::allocator<struct std::pair<std::string const, std::unique_ptr<struct BlockGeometry::Model>>>> mModels;
MCAPI static class std::map<std::string, std::unique_ptr<class BlockGeometry::TessellatedModel>, struct std::less<std::string>, class std::allocator<struct std::pair<std::string const, std::unique_ptr<class BlockGeometry::TessellatedModel>>>> mTessellatedModels;

};