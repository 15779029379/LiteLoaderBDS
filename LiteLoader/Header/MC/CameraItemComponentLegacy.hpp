/**
 * @file  CameraItemComponentLegacy.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Json.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class CameraItemComponentLegacy.
 *
 */
class CameraItemComponentLegacy {

#define AFTER_EXTRA
// Add Member There
public:
enum UseAction;

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_CAMERAITEMCOMPONENTLEGACY
public:
    class CameraItemComponentLegacy& operator=(class CameraItemComponentLegacy const &) = delete;
    CameraItemComponentLegacy(class CameraItemComponentLegacy const &) = delete;
    CameraItemComponentLegacy() = delete;
#endif

public:
    virtual ~CameraItemComponentLegacy();
    virtual float blackBarsDuration() const;
    virtual float blackBarsScreenRatio() const;
    virtual float shutterScreenRatio() const;
    virtual float shutterDuration() const;
    virtual float pictureDuration() const;
    virtual float slideAwayDuration() const;
    virtual bool canPlace(class ItemStack const &, class Actor &, class BlockPos const &, unsigned char) const;
    virtual void takePictureNow(class Player &, class Actor *, class Actor *);
    virtual void registerCallbacks(class CameraCallbacks *);
    virtual void use(class ItemStack &, class Player &);
    virtual void releaseUsing(class ItemStack &, class Player &, int);
    virtual bool useOn(class ItemStack &, class Actor &, class BlockPos const &, unsigned char, class Vec3 const &);
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_CAMERAITEMCOMPONENTLEGACY
#endif
    MCAPI CameraItemComponentLegacy(class Item &);
    MCAPI bool init(class Json::Value &, class SemVersion const &);

//private:
    MCAPI enum CameraItemComponentLegacy::UseAction _tryPlace(class ItemStack const &, class Actor &, class BlockPos const &, unsigned char, class Vec3 &) const;

private:

};