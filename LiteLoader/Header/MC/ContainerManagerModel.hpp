// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#define EXTRA_INCLUDE_PART_CONTAINERMANAGERMODEL
#include "Extra/ContainerManagerModelAPI.hpp"
#undef EXTRA_INCLUDE_PART_CONTAINERMANAGERMODEL
class ContainerManagerModel {
#include "Extra/ContainerManagerModelAPI.hpp"
public:
    virtual ~ContainerManagerModel();
    virtual int /*enum ContainerID*/ getContainerId() const;
    virtual void setContainerId(int /*enum ContainerID*/);
    virtual int /*enum ContainerType*/ getContainerType() const;
    virtual void setContainerType(int /*enum ContainerType*/);
    virtual void serverInitItemStackIds();
    virtual std::vector<class ItemStack> getItemCopies() const = 0;
    virtual void setSlot(int, class ItemStack const&, bool)    = 0;
    virtual class ItemStack const& getSlot(int) const          = 0;
    virtual void setData(int, int)                             = 0;
    virtual void broadcastChanges()                            = 0;
    virtual void debitPlayerLevels(int);
    virtual bool isCreativeMode() const;
    virtual bool isClientSide() const;
    virtual bool isServerAuthoritative() const;
    virtual bool isValid(float);
    virtual class ContainerScreenContext _postInit() = 0;

public:
    MCAPI void postInit();

protected:
    MCAPI void _addContainer(class std::shared_ptr<class ContainerModel>);
    MCAPI class ContainerScreenContext _containerScreenContext(class BlockPos const&);
    MCAPI class ContainerScreenContext _containerScreenContext(struct ActorUniqueID);
    MCAPI class std::shared_ptr<class ContainerModel> _getContainer(enum ContainerEnumName) const;
    MCAPI bool _isPlayerInRangeOfPosition(class BlockPos const&, float) const;
    MCAPI void _serverInitItemStackIds(class ContainerModel*);

    MCAPI static void _appendCopies(std::vector<class ItemStack>&, std::vector<class ItemStack> const&);
};