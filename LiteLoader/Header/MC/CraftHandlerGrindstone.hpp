// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#include "CraftHandlerBase.hpp"
#define EXTRA_INCLUDE_PART_CRAFTHANDLERGRINDSTONE
#include "Extra/CraftHandlerGrindstoneAPI.hpp"
#undef EXTRA_INCLUDE_PART_CRAFTHANDLERGRINDSTONE
class CraftHandlerGrindstone : public CraftHandlerBase {
#include "Extra/CraftHandlerGrindstoneAPI.hpp"
public:
    /*0*/ virtual ~CraftHandlerGrindstone();
    /*1*/ virtual int /*enum enum ItemStackNetResult*/ preHandleAction(int /*enum enum ItemStackRequestActionType*/);
    /*2*/ virtual void endRequestBatch();
    /*3*/ virtual int /*enum enum ItemStackNetResult*/ _handleCraftAction(class ItemStackRequestActionCraftBase const&);
    /*4*/ virtual void _postCraftRequest(bool);
    /*5*/ virtual class Recipes const* _getLevelRecipes() const;


protected:

private:
    MCAPI class ItemStack _createResultItem(class ItemStack const&, class ItemStack const&);
    MCAPI int _getExperienceFromItem(class ItemStack const&) const;
    MCAPI class ItemStack _getResultItemWithNoEnchants(std::vector<class ItemStack> const&, bool&);
    MCAPI bool _resolveNetIdAndValidate(enum ContainerEnumName, unsigned char, struct ItemStackNetIdVariant const&);
};