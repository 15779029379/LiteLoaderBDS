/**
 * @file  DebugInfoComponent.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class DebugInfoComponent.
 *
 */
class DebugInfoComponent {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_DEBUGINFOCOMPONENT
public:
    class DebugInfoComponent& operator=(class DebugInfoComponent const &) = delete;
    DebugInfoComponent() = delete;
#endif

public:
    virtual ~DebugInfoComponent();
    virtual enum EventResult onEvent(struct ActorNotificationEvent const &);
    virtual void __unk_vfn_2();
    virtual void __unk_vfn_3();
    virtual void __unk_vfn_4();
    virtual void __unk_vfn_5();
    virtual void __unk_vfn_6();
    virtual void __unk_vfn_7();
    virtual void __unk_vfn_8();
    virtual void __unk_vfn_9();
    virtual void __unk_vfn_10();
    virtual void __unk_vfn_11();
    virtual void __unk_vfn_12();
    virtual void __unk_vfn_13();
    virtual void __unk_vfn_14();
    virtual void __unk_vfn_15();
    virtual void __unk_vfn_16();
    virtual void __unk_vfn_17();
    virtual void __unk_vfn_18();
    virtual void __unk_vfn_19();
    virtual void __unk_vfn_20();
    virtual void __unk_vfn_21();
    virtual void __unk_vfn_22();
    virtual void __unk_vfn_23();
    virtual void __unk_vfn_24();
    virtual void __unk_vfn_25();
    virtual void __unk_vfn_26();
    virtual void __unk_vfn_27();
    virtual void __unk_vfn_28();
    virtual void __unk_vfn_29();
    virtual enum EventResult onEvent(struct ActorDefinitionTriggeredEvent const &);
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_DEBUGINFOCOMPONENT
#endif
    MCAPI DebugInfoComponent(class DebugInfoComponent const &);
    MCAPI DebugInfoComponent(class DebugInfoComponent &&);
    MCAPI void addListener(class HashedString const &, class NetworkIdentifier, enum SubClientId);
    MCAPI bool listenersEmpty() const;
    MCAPI class DebugInfoComponent & operator=(class DebugInfoComponent &&);
    MCAPI void removeListener(class HashedString const &, class NetworkIdentifier, enum SubClientId);

};