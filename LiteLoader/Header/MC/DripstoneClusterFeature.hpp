/**
 * @file  DripstoneClusterFeature.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class DripstoneClusterFeature.
 *
 */
class DripstoneClusterFeature {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_DRIPSTONECLUSTERFEATURE
public:
    class DripstoneClusterFeature& operator=(class DripstoneClusterFeature const &) = delete;
    DripstoneClusterFeature(class DripstoneClusterFeature const &) = delete;
    DripstoneClusterFeature() = delete;
#endif

public:
    virtual ~DripstoneClusterFeature();
    virtual class std::optional<class BlockPos> place(class IBlockWorldGenAPI &, class BlockPos const &, class Random &, class RenderParams &) const;
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_DRIPSTONECLUSTERFEATURE
#endif

//private:
    MCAPI static int _getDripstoneHeight(class Random &, int, int, float, int);
    MCAPI static bool _placeColumn(class IBlockWorldGenAPI &, class Random &, class BlockPos const &, int, int, float, double, int, float);
    MCAPI static void _replaceBlocksWithDripstoneBlocks(class IBlockWorldGenAPI &, class BlockPos const &, int, unsigned char);

private:

};