// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"


#define BEFORE_EXTRA //DO NOT EDIT THIS LINE
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA //DO NOT EDIT THIS LINE

namespace DripstoneUtils {

#define AFTER_EXTRA //DO NOT EDIT THIS LINE
// Add Member There
struct PointedDripstoneBasePos {
    PointedDripstoneBasePos() = delete;
    PointedDripstoneBasePos(PointedDripstoneBasePos const&) = delete;
    PointedDripstoneBasePos(PointedDripstoneBasePos const&&) = delete;
};

#undef AFTER_EXTRA //DO NOT EDIT THIS LINE
    MCAPI void buildBaseToTipColumn(class IBlockWorldGenAPI&, class BlockPos const&, unsigned char, int, bool);
    MCAPI bool canBeAdjacentToWater(class IBlockWorldGenAPI&, class BlockPos const&);
    MCAPI class Block const& getPlacementBlock(unsigned char, enum DripstoneThickness const&);
    MCAPI class std::optional<struct DripstoneUtils::PointedDripstoneBasePos> getPointedDripstoneBasePos(class IBlockWorldGenAPI&, class BlockPos const&, class Random&);
    MCAPI bool isDripstoneBaseOrLava(class IBlockWorldGenAPI const&, class BlockPos const&);
    MCAPI bool isEmptyOrWater(class IBlockWorldGenAPI const&, class BlockPos const&);
    MCAPI bool isLava(class IBlockWorldGenAPI const&, class BlockPos const&);
    MCAPI bool placeDripstoneBlockIfPossible(class IBlockWorldGenAPI&, class BlockPos const&);
    MCAPI bool replaceableByDripstone(class BlockLegacy const&);
};