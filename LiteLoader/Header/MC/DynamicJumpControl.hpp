/**
 * @file  DynamicJumpControl.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class DynamicJumpControl.
 *
 */
class DynamicJumpControl {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_DYNAMICJUMPCONTROL
public:
    class DynamicJumpControl& operator=(class DynamicJumpControl const &) = delete;
    DynamicJumpControl(class DynamicJumpControl const &) = delete;
#endif

public:
    virtual ~DynamicJumpControl();
    virtual void initializeInternal(class Mob &, struct JumpControlDescription *);
    virtual std::unique_ptr<class JumpControl> clone() const;
    virtual void tick(class JumpControlComponent &, class Mob &);
    virtual int getJumpDelay(class JumpControlComponent const &) const;
    virtual float getJumpPower(class JumpControlComponent const &) const;
    virtual enum JumpType getJumpType(class JumpControlComponent const &) const;
    virtual void setJumpType(class JumpControlComponent &, enum JumpType);
    virtual void resetSpeedModifier(class JumpControlComponent const &, class Mob &);
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_DYNAMICJUMPCONTROL
#endif
    MCAPI DynamicJumpControl();

};