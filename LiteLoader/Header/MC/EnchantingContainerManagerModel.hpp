// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#include "ContainerManagerModel.hpp"
#define EXTRA_INCLUDE_PART_ENCHANTINGCONTAINERMANAGERMODEL
#include "Extra/EnchantingContainerManagerModelAPI.hpp"
#undef EXTRA_INCLUDE_PART_ENCHANTINGCONTAINERMANAGERMODEL
class EnchantingContainerManagerModel : public ContainerManagerModel {
#include "Extra/EnchantingContainerManagerModelAPI.hpp"
public:
    /*0*/ virtual ~EnchantingContainerManagerModel();
    /*1*/ virtual int /*enum enum ContainerID*/ getContainerId() const;
    /*2*/ virtual void setContainerId(int /*enum enum ContainerID*/);
    /*3*/ virtual int /*enum enum ContainerType*/ getContainerType() const;
    /*4*/ virtual void setContainerType(int /*enum enum ContainerType*/);
    /*5*/ virtual std::vector<class ItemStack> getItemCopies() const;
    /*6*/ virtual void setSlot(int, class ItemStack const&, bool);
    /*7*/ virtual class ItemStack const& getSlot(int) const;
    /*8*/ virtual void setData(int, int);
    /*9*/ virtual void broadcastChanges();
    /*10*/ virtual bool isValid(float);
    /*11*/ virtual class ContainerScreenContext _postInit();

    MCAPI std::vector<class ItemEnchantOption> const& getEnchantOptions() const;
    MCAPI void recalculateOptions();
    MCAPI static int const NUM_OPTIONS;

protected:

private:
};