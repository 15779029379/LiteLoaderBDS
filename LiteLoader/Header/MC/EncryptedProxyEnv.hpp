/**
 * @file  EncryptedProxyEnv.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "TransactionalWorldBlockTarget.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class EncryptedProxyEnv.
 *
 */
class EncryptedProxyEnv : public TransactionalWorldBlockTarget {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_ENCRYPTEDPROXYENV
public:
    class EncryptedProxyEnv& operator=(class EncryptedProxyEnv const &) = delete;
    EncryptedProxyEnv(class EncryptedProxyEnv const &) = delete;
    EncryptedProxyEnv() = delete;
#endif

public:
    virtual ~EncryptedProxyEnv();
    virtual class leveldb::Status NewSequentialFile(std::string const &, class leveldb::SequentialFile **);
    virtual class leveldb::Status NewRandomAccessFile(std::string const &, class leveldb::RandomAccessFile **);
    virtual class leveldb::Status NewWritableFile(std::string const &, class leveldb::WritableFile **);
    virtual class leveldb::Status DeleteFileA(std::string const &);
    virtual class leveldb::Status RenameFile(std::string const &, std::string const &);
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_ENCRYPTEDPROXYENV
#endif
    MCAPI EncryptedProxyEnv(class leveldb::Env *, class ContentIdentity const &, std::string const &, enum EncryptedProxyReadMode);

};