/**
 * @file  EnderEyeItem.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Json.hpp"
#include "Item.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class EnderEyeItem.
 *
 */
class EnderEyeItem : public Item {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_ENDEREYEITEM
public:
    class EnderEyeItem& operator=(class EnderEyeItem const &) = delete;
    EnderEyeItem(class EnderEyeItem const &) = delete;
    EnderEyeItem() = delete;
#endif

public:
    virtual ~EnderEyeItem();
    virtual void __unk_vfn_7();
    virtual void __unk_vfn_11();
    virtual void __unk_vfn_14();
    virtual void __unk_vfn_16();
    virtual bool isThrowable() const;
    virtual void __unk_vfn_52();
    virtual void __unk_vfn_54();
    virtual void __unk_vfn_67();
    virtual void __unk_vfn_71();
    virtual void __unk_vfn_72();
    virtual void __unk_vfn_73();
    virtual void __unk_vfn_76();
    virtual void __unk_vfn_80();
    virtual void __unk_vfn_81();
    virtual class ItemStack & use(class ItemStack &, class Player &) const;
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_ENDEREYEITEM
#endif
    MCAPI EnderEyeItem(std::string const &, int);

};