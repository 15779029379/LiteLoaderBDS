/**
 * @file  EntityPlacerItemComponent.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class EntityPlacerItemComponent.
 *
 */
class EntityPlacerItemComponent {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_ENTITYPLACERITEMCOMPONENT
public:
    class EntityPlacerItemComponent& operator=(class EntityPlacerItemComponent const &) = delete;
    EntityPlacerItemComponent(class EntityPlacerItemComponent const &) = delete;
    EntityPlacerItemComponent() = delete;
#endif

public:
    virtual ~EntityPlacerItemComponent();
    virtual bool isNetworkComponent() const;
    virtual void __unk_vfn_2();
    virtual bool useOn(class ItemStack &, class Actor &, class BlockPos const &, unsigned char, class Vec3 const &) const;
    virtual void __unk_vfn_4();
    virtual std::unique_ptr<class CompoundTag> buildNetworkTag() const;
    virtual bool initializeFromNetwork(class CompoundTag const &);
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_ENTITYPLACERITEMCOMPONENT
#endif
    MCAPI bool dispense(class BlockSource &, class Container &, int, class Vec3 const &, unsigned char) const;
    MCAPI static void bindType();
    MCAPI static class HashedString const & getIdentifier();

//private:
    MCAPI void _positionAndRotateActor(class Actor &, class Vec3, unsigned char, class Vec3 const &, class BlockLegacy const *) const;
    MCAPI void _setActorCustomName(class Actor &, class ItemStack const &) const;

private:

};