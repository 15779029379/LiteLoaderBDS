/**
 * @file  EquippableComponent.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class EquippableComponent.
 *
 */
class EquippableComponent {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_EQUIPPABLECOMPONENT
public:
    class EquippableComponent& operator=(class EquippableComponent const &) = delete;
    EquippableComponent(class EquippableComponent const &) = delete;
    EquippableComponent() = delete;
#endif

public:
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_EQUIPPABLECOMPONENT
#endif
    MCAPI EquippableComponent(class EquippableComponent &&);
    MCAPI class UpdateEquipPacket createDataPacket(class Actor &, enum ContainerID) const;
    MCAPI std::unique_ptr<class CompoundTag> createTag(class Actor &) const;
    MCAPI int getSlotCount() const;
    MCAPI bool hasSlotAllowedItems(int) const;
    MCAPI bool onItemChanged(class Actor &, unsigned __int64, class ItemStack const &) const;
    MCAPI class EquippableComponent & operator=(class EquippableComponent &&);
    MCAPI std::vector<class ItemDescriptor> const * tryGetSlotAllowedItems(int) const;
    MCAPI ~EquippableComponent();

};