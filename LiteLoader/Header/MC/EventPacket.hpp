// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#include "Packet.hpp"
#define EXTRA_INCLUDE_PART_EVENTPACKET
#include "Extra/EventPacketAPI.hpp"
#undef EXTRA_INCLUDE_PART_EVENTPACKET
class EventPacket : public Packet {
#include "Extra/EventPacketAPI.hpp"
public:
    virtual ~EventPacket();
    virtual int /*enum MinecraftPacketIds*/ getId();
    virtual std::string getName();
    virtual void write(class BinaryStream&);
    virtual void unk_vfn_5();
    virtual int /*enum StreamReadResult*/ _read(class ReadOnlyBinaryStream&);

public:
    MCAPI class EventPacket& operator=(class EventPacket&&);
    MCAPI EventPacket();
    MCAPI EventPacket(class Player const*, bool, class Actor const*, class gsl::not_null<class Mob const*>, enum ActorDamageCause);
    MCAPI EventPacket(class Player const*, enum EventPacket::AgentResult, std::string const&, std::string const&, int);
    MCAPI EventPacket(class Player const*, enum EventPacket::AgentResult, std::string const&, std::string const&, std::string const&);
    MCAPI EventPacket(class Player const*, enum MinecraftEventing::AchievementIds, bool);
    MCAPI EventPacket(class Player const*, class gsl::not_null<class Mob const*>);
    MCAPI EventPacket(class Player const*, class gsl::not_null<class Actor const*>, enum MinecraftEventing::InteractionType);
    MCAPI EventPacket(class Player const*, class AutomaticID<class Dimension, int>);
    MCAPI EventPacket(class Player const*, class AutomaticID<class Dimension, int>, class AutomaticID<class Dimension, int>);
    MCAPI EventPacket(class Player const*, class Actor const*, class gsl::not_null<class Mob const*>, enum ActorDamageCause, enum ActorType);
    MCAPI EventPacket(class Player const*, class Actor const*, class gsl::not_null<class Mob const*>, enum ActorDamageCause, std::string, int, enum ActorType);
    MCAPI EventPacket(class Player const*, int, class gsl::not_null<class Actor const*>);
    MCAPI EventPacket(class Player const*, int, int, enum ActorDamageCause, bool);
    MCAPI EventPacket(class Player const*, int, int, int, int, int);
    MCAPI EventPacket(class Player const*, short, unsigned int, short);
    MCAPI EventPacket(class Player const*, class Raid const&, bool);
    MCAPI EventPacket(class Player const*, std::string const&, int, int, std::string const&);
    MCAPI EventPacket(class Player const*, struct EventPacket::Data const&);
    MCAPI EventPacket(class Player const&, enum MovementEventType, float, float, float, float, float);
    MCAPI EventPacket(class Player const&, std::string const&, int);
    MCAPI EventPacket(class Player const&, std::string const&);
};