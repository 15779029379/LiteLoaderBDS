/**
 * @file  ExecuteContextCommandOrigin.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Json.hpp"
#include "CommandOrigin.hpp"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

/**
 * @brief MC class ExecuteContextCommandOrigin.
 *
 */
class ExecuteContextCommandOrigin : public CommandOrigin {

#define AFTER_EXTRA

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_EXECUTECONTEXTCOMMANDORIGIN
public:
    class ExecuteContextCommandOrigin& operator=(class ExecuteContextCommandOrigin const &) = delete;
    ExecuteContextCommandOrigin(class ExecuteContextCommandOrigin const &) = delete;
    ExecuteContextCommandOrigin() = delete;
#endif

public:
    virtual ~ExecuteContextCommandOrigin();
    virtual std::string const & getRequestId() const;
    virtual std::string getName() const;
    virtual class BlockPos getBlockPosition() const;
    virtual class Vec3 getWorldPosition() const;
    virtual class std::optional<class Vec2> getRotation() const;
    virtual class Level * getLevel() const;
    virtual class Dimension * getDimension() const;
    virtual class Actor * getEntity() const;
    virtual enum CommandPermissionLevel getPermissionsLevel() const;
    virtual std::unique_ptr<class CommandOrigin> clone() const;
    virtual enum CommandOriginType getOriginType() const;
    virtual void updateValues();
    virtual class Vec3 const getExecutePosition(int, class CommandPositionFloat const &) const;
    virtual class CompoundTag serialize() const;
    virtual bool isValid() const;
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_EXECUTECONTEXTCOMMANDORIGIN
#endif
    MCAPI ExecuteContextCommandOrigin(struct ActorUniqueID, class Vec3 const &, class std::optional<class Vec2> const &, struct ActorUniqueID, struct ActorUniqueID, enum ActorLocation, class AutomaticID<class Dimension, int>, class Level &);
    MCAPI void setDimension(class Dimension &);
    MCAPI void setExecutionEntity(class Actor const &);
    MCAPI void setPosition(class Vec3 const &);
    MCAPI void setPositionEntity(class Actor const &);
    MCAPI void setRotationEntity(class Actor const &);
    MCAPI static std::unique_ptr<class ExecuteContextCommandOrigin> load(class CompoundTag const &, class ServerLevel &);

};