// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#define EXTRA_INCLUDE_PART
#include "Extra/ExternalFileLevelStorageSourceAPI.hpp"
#undef EXTRA_INCLUDE_PART
class ExternalFileLevelStorageSource {
#include "Extra/ExternalFileLevelStorageSourceAPI.hpp"
public:
    virtual ~ExternalFileLevelStorageSource();
    virtual std::string const& getName();
    virtual class Core::Result getLevelData(std::string const&, class LevelData&);
    virtual class LevelData getLevelData(std::string const&);
    virtual void saveLevelData(std::string const&, class LevelData const&);
    virtual void getLevelList(std::vector<class Core::PathBuffer<std::string>>&);
    virtual std::unique_ptr<class LevelStorage> createLevelStorage(class Scheduler&, std::string const&, class ContentIdentity const&, class IContentKeyProvider const&, class std::chrono::duration<__int64, struct std::ratio<1, 1000000000>> const&, std::unique_ptr<class LevelStorageEventing>);
    virtual std::unique_ptr<class LevelLooseFileStorage> createLevelLooseStorage(std::string const&, class ContentIdentity const&, class IContentKeyProvider const&);
    virtual void unk_vfn_8();
    virtual void deleteLevel(std::string const&);
    virtual void renameLevel(class LevelData&, class Core::Path const&, std::string const&);
    virtual bool renameLevel(std::string const&, std::string const&);
    virtual bool createBackupCopyOfWorld(std::string const&, std::string const&, std::string const&);
    virtual void unk_vfn_13();
    virtual void unk_vfn_14();
    virtual void unk_vfn_15();
    virtual bool isLevelMarkedForSync(class Core::Path const&);
    virtual bool isLevelPartiallyCopied(class Core::Path const&);
    virtual class Core::PathBuffer<std::string> getLevelDatFoundPath(class Core::Path const&);
    virtual class Core::PathBuffer<std::string> const getBasePath();
    virtual class Core::PathBuffer<std::string> const getPathToLevel(std::string const&);
    virtual class Core::PathBuffer<std::string> const getPathToLevelInfo(std::string const&, bool);
    virtual void unk_vfn_22();
};