/**
 * @file  FileSystemFileAccess.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Core.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class FileSystemFileAccess.
 *
 */
class FileSystemFileAccess {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_FILESYSTEMFILEACCESS
public:
    class FileSystemFileAccess& operator=(class FileSystemFileAccess const &) = delete;
    FileSystemFileAccess(class FileSystemFileAccess const &) = delete;
    FileSystemFileAccess() = delete;
#endif

public:
    virtual ~FileSystemFileAccess();
    virtual void * fopen(class Core::Path const &, std::string const &);
    virtual int fclose(void *);
    virtual int fseek(void *, __int64, int);
    virtual __int64 ftell(void *);
    virtual class IFileReadAccess const * getReadInterface() const;
    virtual class IFileWriteAccess * getWriteInterface();
    virtual void unload();
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_FILESYSTEMFILEACCESS
#endif
    MCAPI FileSystemFileAccess(enum FileSystemMode);

};