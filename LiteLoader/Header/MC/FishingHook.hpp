/**
 * @file  FishingHook.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Actor.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class FishingHook.
 *
 */
class FishingHook : public Actor {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_FISHINGHOOK
public:
    class FishingHook& operator=(class FishingHook const &) = delete;
    FishingHook(class FishingHook const &) = delete;
    FishingHook() = delete;
#endif

public:
    virtual void reloadHardcoded(enum Actor::InitializationMethod, class VariantParameterList const &);
    virtual ~FishingHook();
    virtual void __unk_vfn_41();
    virtual void normalTick();
    virtual void __unk_vfn_61();
    virtual void __unk_vfn_68();
    virtual float getShadowRadius() const;
    virtual void __unk_vfn_82();
    virtual void __unk_vfn_85();
    virtual void __unk_vfn_88();
    virtual void __unk_vfn_96();
    virtual void __unk_vfn_99();
    virtual void __unk_vfn_106();
    virtual void __unk_vfn_108();
    virtual void __unk_vfn_109();
    virtual void __unk_vfn_111();
    virtual void handleEntityEvent(enum ActorEvent, int);
    virtual bool save(class CompoundTag &) const;
    virtual struct ActorUniqueID getSourceUniqueID() const;
    virtual bool canChangeDimensionsUsingPortal() const;
    virtual void __unk_vfn_182();
    virtual void __unk_vfn_196();
    virtual void __unk_vfn_222();
    virtual void __unk_vfn_223();
    virtual void __unk_vfn_248();
    virtual void __unk_vfn_251();
    virtual bool shouldDropDeathLoot() const;
    virtual void __unk_vfn_269();
    virtual void __unk_vfn_277();
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_FISHINGHOOK
#endif
    MCAPI FishingHook(class ActorDefinitionGroup *, struct ActorDefinitionIdentifier const &, class EntityContext &);
    MCAPI class Actor * getOwner();
    MCAPI void postNormalTick();
    MCAPI int retrieve();
MCAPI static float const BOBBER_SIZE;

//protected:
    MCAPI void _fishPosEvent();
    MCAPI void _fishTeaseEvent();
    MCAPI void _fishhookEvent();
    MCAPI float _getWaterPercentage();
    MCAPI class HitResult _hitCheck();
    MCAPI void _pullCloser(class Actor &, float);
    MCAPI bool _serverHooked();
    MCAPI bool _serverLured();
    MCAPI void _updateGravity();
    MCAPI void _updateServer();

protected:

};