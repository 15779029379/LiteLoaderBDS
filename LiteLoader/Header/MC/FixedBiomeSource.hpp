/**
 * @file  FixedBiomeSource.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class FixedBiomeSource.
 *
 */
class FixedBiomeSource {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_FIXEDBIOMESOURCE
public:
    class FixedBiomeSource& operator=(class FixedBiomeSource const &) = delete;
    FixedBiomeSource(class FixedBiomeSource const &) = delete;
    FixedBiomeSource() = delete;
#endif

public:
    virtual ~FixedBiomeSource();
    virtual void fillBiomes(class LevelChunk &, class ChunkLocalNoiseCache const &) const;
    virtual class BiomeArea getBiomeArea(class BoundingBox const &, unsigned int) const;
    virtual class BiomeArea getBiomeArea(class BoundingBox const &, unsigned int, struct GetBiomeOptions const &) const;
    virtual bool containsOnly(int, int, int, int, class gsl::span<int const, -1>) const;
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_FIXEDBIOMESOURCE
    MCVAPI class Biome const * getBiome(class BlockPos const &) const;
    MCVAPI class Biome const * getBiome(struct GetBiomeOptions const &) const;
    MCVAPI class Biome const * getBiome(int, int, int) const;
#endif
    MCAPI FixedBiomeSource(class Biome const &);

};