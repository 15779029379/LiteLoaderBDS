// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#define EXTRA_INCLUDE_PART_GAMEMODE
#include "Extra/GameModeAPI.hpp"
#undef EXTRA_INCLUDE_PART_GAMEMODE
class GameMode {
#include "Extra/GameModeAPI.hpp"
public:
    virtual ~GameMode();
    virtual bool startDestroyBlock(class BlockPos const&, unsigned char, bool&);
    virtual bool destroyBlock(class BlockPos const&, unsigned char);
    virtual bool continueDestroyBlock(class BlockPos const&, unsigned char, class Vec3 const&, bool&);
    virtual void stopDestroyBlock(class BlockPos const&);
    virtual void startBuildBlock(class BlockPos const&, unsigned char);
    virtual bool buildBlock(class BlockPos const&, unsigned char, bool);
    virtual void continueBuildBlock(class BlockPos const&, unsigned char);
    virtual void stopBuildBlock();
    virtual void tick();
    virtual float getPickRange(int /*enum InputMode*/ const&, bool);
    virtual bool useItem(class ItemStack&);
    virtual bool useItemOn(class ItemStack&, class BlockPos const&, unsigned char, class Vec3 const&, class Block const*);
    virtual bool interact(class Actor&, class Vec3 const&);
    virtual bool attack(class Actor&);
    virtual void releaseUsingItem();
    virtual void setTrialMode(bool);
    virtual bool isInTrialMode();
    virtual void registerUpsellScreenCallback(class std::function<void(bool)>);

public:
    MCAPI bool _startDestroyBlock(class BlockPos const&, class Vec3 const&, unsigned char, bool&);
    MCAPI bool _tickContinueDestroyBlock(class BlockPos const&, class Vec3 const&, unsigned char, bool&, class std::function<void(void)> const&);
    MCAPI bool baseUseItem(class ItemStack&);
    MCAPI unsigned char getDestroyBlockFace() const;
    MCAPI class BlockPos const& getDestroyBlockPos() const;
    MCAPI float getDestroyProgress();
    MCAPI float getDestroyRate(class Block const&);
    MCAPI float getMaxPickRange();
    MCAPI float getMaxPickRangeSqr();

    MCAPI static float const PICKRANGE_CREATIVE_MAXIMUM;
    MCAPI static float const PICKRANGE_CREATIVE_MAXIMUM_SQR;
    MCAPI static float const PICKRANGE_GAMEPAD;
    MCAPI static float const PICKRANGE_MOUSE;
    MCAPI static float const PICKRANGE_SURVIVAL_MAXIMUM;
    MCAPI static float const PICKRANGE_SURVIVAL_MAXIMUM_SQR;
    MCAPI static float const PICKRANGE_TOUCH_CREATIVE;
    MCAPI static float const PICKRANGE_TOUCH_SURVIVAL;
    MCAPI static float const PICKRANGE_VR_CREATIVE;
    MCAPI static float const PICKRANGE_VR_SURVIVAL;

private:
    MCAPI bool _canDestroy(class BlockPos const&, unsigned char);
    MCAPI bool _canUseBlock(class Block const&);
    MCAPI bool _creativeDestroyBlock(class BlockPos const&, unsigned char);
};