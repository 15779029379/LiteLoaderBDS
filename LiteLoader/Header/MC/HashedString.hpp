// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#define EXTRA_INCLUDE_PART
#include "Extra/HashedStringAPI.hpp"
#undef EXTRA_INCLUDE_PART
class HashedString {
#include "Extra/HashedStringAPI.hpp"

public:
    MCAPI void clear();
    MCAPI bool operator<(class HashedString const&);
    MCAPI bool operator!=(class HashedString const&);
    MCAPI bool operator==(class HashedString const&);
    MCAPI class HashedString& operator=(class HashedString const&);
    MCAPI class HashedString& operator=(class HashedString&&);
    MCAPI HashedString(unsigned __int64, char const*);
    MCAPI HashedString(char const*);
    MCAPI HashedString(std::string const&);
    MCAPI HashedString(class HashedString const&);
    MCAPI HashedString(std::nullptr_t);
    MCAPI HashedString(class HashedString&&);
    MCAPI bool Deserialize(class BasicLoader&, struct SerializerTraits const&, class BedrockLoadContext const&);
    MCAPI bool Serialize(class BasicSaver&, struct SerializerTraits const&) const;
    MCAPI char const* c_str() const;
    MCAPI bool empty() const;
    MCAPI unsigned __int64 getHash() const;
    MCAPI std::string const& getString() const;
    MCAPI bool isEmpty() const;
    MCAPI ~HashedString();

    MCAPI static unsigned __int64 computeHash(std::string const&);
    MCAPI static unsigned __int64 computeHash(char const*);
    MCAPI static class HashedString defaultErrorValue;
    MCAPI static class HashedString const& getEmptyString();
};