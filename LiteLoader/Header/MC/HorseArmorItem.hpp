/**
 * @file  HorseArmorItem.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Json.hpp"
#include "Item.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class HorseArmorItem.
 *
 */
class HorseArmorItem : public Item {

#define AFTER_EXTRA
// Add Member There
public:
enum Tier;

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_HORSEARMORITEM
public:
    class HorseArmorItem& operator=(class HorseArmorItem const &) = delete;
    HorseArmorItem(class HorseArmorItem const &) = delete;
    HorseArmorItem() = delete;
#endif

public:
    virtual ~HorseArmorItem();
    virtual void __unk_vfn_7();
    virtual void __unk_vfn_11();
    virtual void __unk_vfn_14();
    virtual void __unk_vfn_16();
    virtual bool isDyeable() const;
    virtual void __unk_vfn_52();
    virtual void __unk_vfn_54();
    virtual void appendFormattedHovertext(class ItemStackBase const &, class Level &, std::string &, bool) const;
    virtual int getArmorValue() const;
    virtual void __unk_vfn_67();
    virtual void __unk_vfn_71();
    virtual void __unk_vfn_72();
    virtual void __unk_vfn_73();
    virtual class mce::Color getColor(class CompoundTag const *, class ItemDescriptor const &) const;
    virtual bool hasCustomColor(class CompoundTag const *) const;
    virtual void __unk_vfn_76();
    virtual void clearColor(class CompoundTag *) const;
    virtual void setColor(class ItemStackBase &, class mce::Color const &) const;
    virtual void __unk_vfn_80();
    virtual void __unk_vfn_81();
    virtual bool dispense(class BlockSource &, class Container &, int, class Vec3 const &, unsigned char) const;
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_HORSEARMORITEM
#endif
    MCAPI HorseArmorItem(std::string const &, int, int, enum HorseArmorItem::Tier);
    MCAPI enum HorseArmorItem::Tier getTier() const;
MCAPI static int const mHealthPerTier[];

};