/**
 * @file  HumanoidMonster.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Actor.hpp"
#include "Monster.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class HumanoidMonster.
 *
 */
class HumanoidMonster : public Monster {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_HUMANOIDMONSTER
public:
    class HumanoidMonster& operator=(class HumanoidMonster const &) = delete;
    HumanoidMonster(class HumanoidMonster const &) = delete;
    HumanoidMonster() = delete;
#endif

public:
    virtual ~HumanoidMonster();
    virtual void __unk_vfn_41();
    virtual void normalTick();
    virtual void __unk_vfn_61();
    virtual void __unk_vfn_68();
    virtual void __unk_vfn_82();
    virtual void __unk_vfn_85();
    virtual void __unk_vfn_88();
    virtual void __unk_vfn_96();
    virtual void __unk_vfn_99();
    virtual void __unk_vfn_106();
    virtual void __unk_vfn_108();
    virtual void __unk_vfn_109();
    virtual void __unk_vfn_111();
    virtual void __unk_vfn_182();
    virtual void __unk_vfn_196();
    virtual void __unk_vfn_222();
    virtual void __unk_vfn_223();
    virtual void __unk_vfn_248();
    virtual void __unk_vfn_251();
    virtual void __unk_vfn_269();
    virtual void readAdditionalSaveData(class CompoundTag const &, class DataLoadHelper &);
    virtual void addAdditionalSaveData(class CompoundTag &) const;
    virtual void __unk_vfn_277();
    virtual void __unk_vfn_285();
    virtual int getItemUseDuration() const;
    virtual void __unk_vfn_313();
    virtual bool doHurtTarget(class Actor *, enum ActorDamageCause const &);
    virtual void __unk_vfn_317();
    virtual void __unk_vfn_351();
    virtual void __unk_vfn_365();
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_HUMANOIDMONSTER
#endif
    MCAPI HumanoidMonster(class ActorDefinitionGroup *, struct ActorDefinitionIdentifier const &, class EntityContext &);

//private:

private:
MCAPI static float const MAX_ENCHANTED_ARMOR_CHANCE;
MCAPI static float const MAX_ENCHANTED_WEAPON_CHANCE;
MCAPI static float const MAX_PICKUP_LOOT_CHANCE;
MCAPI static float const MAX_WEARING_ARMOR_CHANCE;

};