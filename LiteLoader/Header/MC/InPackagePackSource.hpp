/**
 * @file  InPackagePackSource.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Bedrock.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class InPackagePackSource.
 *
 */
class InPackagePackSource {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_INPACKAGEPACKSOURCE
public:
    class InPackagePackSource& operator=(class InPackagePackSource const &) = delete;
    InPackagePackSource(class InPackagePackSource const &) = delete;
    InPackagePackSource() = delete;
#endif

public:
    virtual ~InPackagePackSource();
    virtual void __unk_vfn_1();
    virtual void __unk_vfn_2();
    virtual enum PackOrigin getPackOrigin() const;
    virtual enum PackType getPackType() const;
    virtual class PackSourceReport load(class IPackManifestFactory &, class gsl::not_null<class Bedrock::NonOwnerPointer<class IContentKeyProvider const>> const &);
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_INPACKAGEPACKSOURCE
    MCVAPI void forEachPack(class std::function<void (class Pack &)>);
    MCVAPI void forEachPackConst(class std::function<void (class Pack const &)>) const;
#endif
    MCAPI InPackagePackSource(class std::shared_ptr<class IInPackagePacks> const &, enum PackType);

};