// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "AttributeBuff.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class InstantaneousAttributeBuff : public AttributeBuff {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_INSTANTANEOUSATTRIBUTEBUFF
public:
    class InstantaneousAttributeBuff& operator=(class InstantaneousAttributeBuff const&) = delete;
    InstantaneousAttributeBuff(class InstantaneousAttributeBuff const&) = delete;
    InstantaneousAttributeBuff() = delete;
#endif

public:
    /*0*/ virtual ~InstantaneousAttributeBuff();
    /*1*/ virtual void __unk_vfn_0();
    /*2*/ virtual void __unk_vfn_1();
    /*
    inline bool isSerializable() const{
        bool (InstantaneousAttributeBuff::*rv)() const;
        *((void**)&rv) = dlsym("?isSerializable@InstantaneousAttributeBuff@@UEBA_NXZ");
        return (this->*rv)();
    }
    inline bool isInstantaneous() const{
        bool (InstantaneousAttributeBuff::*rv)() const;
        *((void**)&rv) = dlsym("?isInstantaneous@InstantaneousAttributeBuff@@UEBA_NXZ");
        return (this->*rv)();
    }
    inline  ~InstantaneousAttributeBuff(){
         (InstantaneousAttributeBuff::*rv)();
        *((void**)&rv) = dlsym("??1InstantaneousAttributeBuff@@UEAA@XZ");
        return (this->*rv)();
    }
    */
    MCAPI InstantaneousAttributeBuff(float, enum AttributeBuffType);

protected:

private:

};