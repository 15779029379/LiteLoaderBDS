/**
 * @file  Inventory.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "FillingContainer.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class Inventory.
 *
 */
class Inventory : public FillingContainer {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_INVENTORY
public:
    class Inventory& operator=(class Inventory const &) = delete;
    Inventory(class Inventory const &) = delete;
    Inventory() = delete;
#endif

public:
    virtual ~Inventory();
    virtual void init();
    virtual void setItem(int, class ItemStack const &);
    virtual void setItemWithForceBalance(int, class ItemStack const &, bool);
    virtual void __unk_vfn_22();
    virtual void __unk_vfn_23();
    virtual bool add(class ItemStack &);
    virtual bool canAdd(class ItemStack const &) const;
    virtual int getEmptySlotsCount() const;
    virtual int getFirstEmptySlot() const;
    virtual void setContainerSize(int);
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_INVENTORY
#endif
    MCAPI Inventory(class Player *);
    MCAPI void dropSlot(int, bool, bool, bool);
    MCAPI std::vector<class ItemStack> getComplexItems();
    MCAPI void setupDefault();
    MCAPI void tick(int);

};