// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#include "Enchant.hpp"

#define BEFORE_EXTRA //DO NOT EDIT THIS LINE
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA //DO NOT EDIT THIS LINE

class ItemEnchants {

#define AFTER_EXTRA //DO NOT EDIT THIS LINE
// Add Member There

#undef AFTER_EXTRA //DO NOT EDIT THIS LINE

public:

    MCAPI ItemEnchants(int);
    MCAPI ItemEnchants(int, class ListTag const&);
    MCAPI bool addEnchant(class EnchantmentInstance, bool);
    MCAPI struct EnchantResult canEnchant(class EnchantmentInstance, bool);
    MCAPI std::vector<class EnchantmentInstance> getAllEnchants() const;
    MCAPI std::vector<std::string> getEnchantNames() const;
    MCAPI std::vector<class EnchantmentInstance> const& getEnchants(int) const;
    MCAPI int getTotalValue(bool) const;
    MCAPI int hasEnchant(enum Enchant::Type) const;
    MCAPI bool isEmpty() const;
    MCAPI ~ItemEnchants();

protected:


private:

    MCAPI std::unique_ptr<class ListTag> _toList() const;
};