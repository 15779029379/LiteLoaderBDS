/**
 * @file  ItemFrameBlock.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "ActorBlock.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class ItemFrameBlock.
 *
 */
class ItemFrameBlock : public ActorBlock {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_ITEMFRAMEBLOCK
public:
    class ItemFrameBlock& operator=(class ItemFrameBlock const &) = delete;
    ItemFrameBlock(class ItemFrameBlock const &) = delete;
    ItemFrameBlock() = delete;
#endif

public:
    virtual ~ItemFrameBlock();
    virtual class AABB const & getAABB(class IConstBlockSource const &, class BlockPos const &, class Block const &, class AABB &, bool) const;
    virtual void __unk_vfn_19();
    virtual void __unk_vfn_29();
    virtual void __unk_vfn_30();
    virtual void __unk_vfn_32();
    virtual void __unk_vfn_33();
    virtual void __unk_vfn_34();
    virtual bool isWaterBlocking() const;
    virtual void __unk_vfn_36();
    virtual void __unk_vfn_37();
    virtual void __unk_vfn_38();
    virtual void __unk_vfn_39();
    virtual void __unk_vfn_40();
    virtual void __unk_vfn_41();
    virtual void __unk_vfn_42();
    virtual void __unk_vfn_44();
    virtual void __unk_vfn_45();
    virtual void __unk_vfn_46();
    virtual void __unk_vfn_47();
    virtual void __unk_vfn_48();
    virtual void __unk_vfn_49();
    virtual void __unk_vfn_59();
    virtual void __unk_vfn_60();
    virtual bool canContainLiquid() const;
    virtual void __unk_vfn_73();
    virtual void __unk_vfn_80();
    virtual bool mayPlace(class BlockSource &, class BlockPos const &, unsigned char) const;
    virtual bool playerWillDestroy(class Player &, class BlockPos const &, class Block const &) const;
    virtual bool getIgnoresDestroyPermissions(class Actor &, class BlockPos const &) const;
    virtual void neighborChanged(class BlockSource &, class BlockPos const &, class BlockPos const &) const;
    virtual class ItemInstance getResourceItem(class Randomize &, class Block const &, int) const;
    virtual class ItemInstance asItemInstance(class BlockSource &, class BlockPos const &, class Block const &) const;
    virtual void spawnResources(class BlockSource &, class BlockPos const &, class Block const &, class Randomize &, std::vector<class Item const *> *, float, int) const;
    virtual void __unk_vfn_105();
    virtual class Block const & getPlacementBlock(class Actor &, class BlockPos const &, unsigned char, class Vec3 const &, int) const;
    virtual bool attack(class Player *, class BlockPos const &) const;
    virtual void __unk_vfn_124();
    virtual void __unk_vfn_126();
    virtual void __unk_vfn_127();
    virtual int getComparatorSignal(class BlockSource &, class BlockPos const &, class Block const &, unsigned char) const;
    virtual void __unk_vfn_132();
    virtual class AABB const & getVisualShape(class Block const &, class AABB &, bool) const;
    virtual void __unk_vfn_148();
    virtual void __unk_vfn_157();
    virtual void onRemove(class BlockSource &, class BlockPos const &) const;
    virtual void __unk_vfn_168();
    virtual void __unk_vfn_169();
    virtual void __unk_vfn_170();
    virtual void onPlace(class BlockSource &, class BlockPos const &) const;
    virtual void tick(class BlockSource &, class BlockPos const &, class Random &) const;
    virtual void __unk_vfn_177();
    virtual bool use(class Player &, class BlockPos const &, unsigned char) const;
    virtual bool canSurvive(class BlockSource &, class BlockPos const &) const;
    virtual void __unk_vfn_188();
    virtual class ItemInstance getEntityResourceItem(class Randomize &, class BlockActor const &, int) const;
    virtual class HashedString getSpawnedItemName() const;
    virtual void __unk_vfn_194();
    virtual void __unk_vfn_195();
    virtual void __unk_vfn_196();
    virtual void __unk_vfn_197();
    virtual void __unk_vfn_198();
    MCAPI std::string const & getDescriptionId() const;
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_ITEMFRAMEBLOCK
    MCVAPI bool hasComparatorSignal() const;
    MCVAPI bool isInteractiveBlock() const;
    MCVAPI bool waterSpreadCausesSpawn() const;
#endif
    MCAPI ItemFrameBlock(std::string const &, int);

//private:
    MCAPI void _checkAchievements(class Player &, class BlockPos const &) const;
    MCAPI class ItemFrameBlockActor * _getItemFrame(class BlockSource &, class BlockPos const &) const;
    MCAPI void getShape(int, class AABB &, bool) const;

private:

};