/**
 * @file  JumpControl.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class JumpControl.
 *
 */
class JumpControl {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_JUMPCONTROL
public:
    class JumpControl& operator=(class JumpControl const &) = delete;
    JumpControl(class JumpControl const &) = delete;
#endif

public:
    virtual ~JumpControl();
    virtual void __unk_vfn_1();
    virtual std::unique_ptr<class JumpControl> clone() const;
    virtual void tick(class JumpControlComponent &, class Mob &);
    virtual void __unk_vfn_4();
    virtual float getJumpPower(class JumpControlComponent const &) const;
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_JUMPCONTROL
    MCVAPI int getJumpDelay(class JumpControlComponent const &) const;
    MCVAPI enum JumpType getJumpType(class JumpControlComponent const &) const;
    MCVAPI void initializeInternal(class Mob &, struct JumpControlDescription *);
    MCVAPI void resetSpeedModifier(class JumpControlComponent const &, class Mob &);
    MCVAPI void setJumpType(class JumpControlComponent &, enum JumpType);
#endif
    MCAPI JumpControl();

};