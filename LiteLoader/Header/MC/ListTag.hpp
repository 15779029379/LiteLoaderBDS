// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#include "Tag.hpp"
#define EXTRA_INCLUDE_PART_LISTTAG
#include "Extra/ListTagAPI.hpp"
#undef EXTRA_INCLUDE_PART_LISTTAG
class ListTag : public Tag {
#include "Extra/ListTagAPI.hpp"
public:
    virtual ~ListTag();
    virtual void deleteChildren();
    virtual void write(class IDataOutput&) const;
    virtual void load(class IDataInput&);
    virtual std::string toString() const;
    virtual int /*enum Tag::Type*/ getId() const;
    virtual bool equals(class Tag const&) const;
    virtual void print(std::string const&, class PrintStream&) const;
    virtual std::unique_ptr<class Tag> copy() const;
    virtual unsigned __int64 hash() const;

public:
    MCAPI void add(std::unique_ptr<class Tag>);
    MCAPI std::unique_ptr<class ListTag> copyList() const;
    MCAPI class Tag* get(int) const;
    MCAPI class CompoundTag const* getCompound(unsigned __int64) const;
    MCAPI double getDouble(int) const;
    MCAPI float getFloat(int) const;
    MCAPI int getInt(int) const;
    MCAPI std::string const& getString(int) const;
    MCAPI int size() const;
};