/**
 * @file  LodestoneCompassItem.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Json.hpp"
#include "AbstractCompassItem.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class LodestoneCompassItem.
 *
 */
class LodestoneCompassItem : public AbstractCompassItem {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_LODESTONECOMPASSITEM
public:
    class LodestoneCompassItem& operator=(class LodestoneCompassItem const &) = delete;
    LodestoneCompassItem(class LodestoneCompassItem const &) = delete;
    LodestoneCompassItem() = delete;
#endif

public:
    virtual ~LodestoneCompassItem();
    virtual void __unk_vfn_7();
    virtual void __unk_vfn_11();
    virtual void __unk_vfn_14();
    virtual void __unk_vfn_16();
    virtual void __unk_vfn_52();
    virtual void __unk_vfn_54();
    virtual void __unk_vfn_67();
    virtual void __unk_vfn_71();
    virtual void __unk_vfn_72();
    virtual void __unk_vfn_73();
    virtual void __unk_vfn_76();
    virtual void __unk_vfn_80();
    virtual void __unk_vfn_81();
    virtual int getAnimationFrameFor(class Mob *, bool, class ItemStack const *, bool) const;
    virtual bool _useOn(class ItemStack &, class Actor &, class BlockPos, unsigned char, class Vec3 const &) const;
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_LODESTONECOMPASSITEM
#endif
    MCAPI LodestoneCompassItem(std::string const &, int);
    MCAPI static class PositionTrackingId getPositionTrackingId(class ItemStackBase const &);
    MCAPI static bool linkCompassToLodestone(class ItemStack &, class BlockSource &, class BlockPos);

};