/**
 * @file  MeleeAttackGoal.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class MeleeAttackGoal.
 *
 */
class MeleeAttackGoal {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_MELEEATTACKGOAL
public:
    class MeleeAttackGoal& operator=(class MeleeAttackGoal const &) = delete;
    MeleeAttackGoal(class MeleeAttackGoal const &) = delete;
    MeleeAttackGoal() = delete;
#endif

public:
    virtual ~MeleeAttackGoal();
    virtual bool canUse();
    virtual bool canContinueToUse();
    virtual void __unk_vfn_3();
    virtual void start();
    virtual void stop();
    virtual void tick();
    virtual void appendDebugInfo(std::string &) const;
    virtual void __unk_vfn_8();
    virtual void __unk_vfn_9();
    virtual void _attemptMoveToTarget(class Actor &);
    virtual void _attemptAttackTarget(class Actor &, float, float, float, float);
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_MELEEATTACKGOAL
#endif
    MCAPI MeleeAttackGoal(class Mob &);

//protected:
    MCAPI void _attemptMoveToTargetPosition(class Actor &, float);
    MCAPI float _getAttackReachSqr(class Actor const &) const;
    MCAPI bool _inSunlight(class Actor const &) const;

protected:
MCAPI static class BaseGameVersion const min3DAttackVersion;

};