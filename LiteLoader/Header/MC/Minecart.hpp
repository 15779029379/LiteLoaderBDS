// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Actor.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class Minecart : public Actor {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_MINECART
public:
    class Minecart& operator=(class Minecart const&) = delete;
    Minecart(class Minecart const&) = delete;
    Minecart() = delete;
#endif

public:
    /*8*/ virtual void reloadHardcoded(enum Actor::InitializationMethod, class VariantParameterList const&);
    /*9*/ virtual void reloadHardcodedClient(enum Actor::InitializationMethod, class VariantParameterList const&);
    /*14*/ virtual ~Minecart();
    /*33*/ virtual float getInterpolatedBodyYaw(float) const;
    /*41*/ virtual void __unk_vfn_41();
    /*48*/ virtual void normalTick();
    /*61*/ virtual void __unk_vfn_61();
    /*68*/ virtual void __unk_vfn_68();
    /*79*/ virtual float getShadowHeightOffs();
    /*80*/ virtual float getShadowRadius() const;
    /*82*/ virtual void __unk_vfn_82();
    /*87*/ virtual void __unk_vfn_87();
    /*93*/ virtual bool isPickable();
    /*94*/ virtual void __unk_vfn_94();
    /*97*/ virtual void __unk_vfn_97();
    /*104*/ virtual void __unk_vfn_104();
    /*106*/ virtual void __unk_vfn_106();
    /*107*/ virtual void __unk_vfn_107();
    /*108*/ virtual void __unk_vfn_108();
    /*112*/ virtual class Actor* findAttackTarget();
    /*134*/ virtual bool isInvulnerableTo(class ActorDamageSource const&) const;
    /*140*/ virtual void onBounceStarted(class BlockPos const&, class Block const&);
    /*172*/ virtual struct ActorUniqueID getSourceUniqueID() const;
    /*182*/ virtual void __unk_vfn_182();
    /*184*/ virtual struct ActorUniqueID getControllingPlayer() const;
    /*196*/ virtual void __unk_vfn_196();
    /*221*/ virtual void __unk_vfn_221();
    /*222*/ virtual void __unk_vfn_222();
    /*228*/ virtual void __unk_vfn_228();
    /*242*/ virtual void __unk_vfn_242();
    /*245*/ virtual void __unk_vfn_245();
    /*246*/ virtual void kill();
    /*254*/ virtual void interpolatorTick();
    /*255*/ virtual void updateEntitySpecificMolangVariables(class RenderParams&);
    /*257*/ virtual void __unk_vfn_257();
    /*258*/ virtual bool _hurt(class ActorDamageSource const&, int, bool, bool);
    /*261*/ virtual void readAdditionalSaveData(class CompoundTag const&, class DataLoadHelper&);
    /*262*/ virtual void addAdditionalSaveData(class CompoundTag&);
    /*265*/ virtual void __unk_vfn_265();
    /*273*/ virtual void _onSizeUpdated();
    /*274*/ virtual void __unk_vfn_274();
    /*275*/ virtual void destroy(class ActorDamageSource const&, bool);
    /*276*/ virtual void __unk_vfn_276() = 0;
    /*277*/ virtual class Block const* getDefaultDisplayBlock() const;
    /*278*/ virtual void __unk_vfn_278();
    /*279*/ virtual void __unk_vfn_279();
    /*280*/ virtual void applyNaturalSlowdown(class BlockSource&);
    /*281*/ virtual void _lazyInitDisplayBlock();
    /*
    inline bool canMakeStepSound() const{
        bool (Minecart::*rv)() const;
        *((void**)&rv) = dlsym("?canMakeStepSound@Minecart@@EEBA_NXZ");
        return (this->*rv)();
    }
    inline int getDefaultDisplayOffset() const{
        int (Minecart::*rv)() const;
        *((void**)&rv) = dlsym("?getDefaultDisplayOffset@Minecart@@UEBAHXZ");
        return (this->*rv)();
    }
    inline int getDefaultDisplayData() const{
        int (Minecart::*rv)() const;
        *((void**)&rv) = dlsym("?getDefaultDisplayData@Minecart@@UEBAHXZ");
        return (this->*rv)();
    }
    inline  ~Minecart(){
         (Minecart::*rv)();
        *((void**)&rv) = dlsym("??1Minecart@@UEAA@XZ");
        return (this->*rv)();
    }
    */
    MCAPI Minecart(class ActorDefinitionGroup*, struct ActorDefinitionIdentifier const&, class EntityContext&);
    MCAPI void setCustomDisplay(bool);
    MCAPI void setDisplayBlock(class Block const&);

protected:

private:
    MCAPI void _registerLoopingSounds();

};