/**
 * @file  Minecart.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Actor.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class Minecart.
 *
 */
class Minecart : public Actor {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_MINECART
public:
    class Minecart& operator=(class Minecart const &) = delete;
    Minecart(class Minecart const &) = delete;
    Minecart() = delete;
#endif

public:
    virtual void reloadHardcoded(enum Actor::InitializationMethod, class VariantParameterList const &);
    virtual void reloadHardcodedClient(enum Actor::InitializationMethod, class VariantParameterList const &);
    virtual ~Minecart();
    virtual float getInterpolatedBodyYaw(float) const;
    virtual void __unk_vfn_41();
    virtual void normalTick();
    virtual void __unk_vfn_61();
    virtual void __unk_vfn_68();
    virtual float getShadowHeightOffs();
    virtual float getShadowRadius() const;
    virtual void __unk_vfn_82();
    virtual void __unk_vfn_85();
    virtual void __unk_vfn_88();
    virtual bool isPickable();
    virtual void __unk_vfn_96();
    virtual void __unk_vfn_99();
    virtual void __unk_vfn_106();
    virtual void __unk_vfn_108();
    virtual void __unk_vfn_109();
    virtual void __unk_vfn_111();
    virtual bool isInvulnerableTo(class ActorDamageSource const &) const;
    virtual void onBounceStarted(class BlockPos const &, class Block const &);
    virtual void __unk_vfn_182();
    virtual struct ActorUniqueID getControllingPlayer() const;
    virtual void __unk_vfn_196();
    virtual void __unk_vfn_222();
    virtual void __unk_vfn_223();
    virtual void __unk_vfn_248();
    virtual void __unk_vfn_251();
    virtual void kill();
    virtual void interpolatorTick();
    virtual void __unk_vfn_269();
    virtual bool _hurt(class ActorDamageSource const &, float, bool, bool);
    virtual void readAdditionalSaveData(class CompoundTag const &, class DataLoadHelper &);
    virtual void addAdditionalSaveData(class CompoundTag &) const;
    virtual void __unk_vfn_277();
    virtual void _onSizeUpdated();
    virtual void __unk_vfn_285();
    virtual void destroy(class ActorDamageSource const &, bool);
    virtual enum MinecartType getType() = 0;
    virtual class Block const * getDefaultDisplayBlock() const;
    virtual void __unk_vfn_289();
    virtual int getDefaultDisplayOffset() const;
    virtual void applyNaturalSlowdown(class BlockSource &);
    virtual void _lazyInitDisplayBlock();
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_MINECART
    MCVAPI bool canMakeStepSound() const;
    MCVAPI int getDefaultDisplayData() const;
#endif
    MCAPI Minecart(class ActorDefinitionGroup *, struct ActorDefinitionIdentifier const &, class EntityContext &);
    MCAPI void dropMinecartWithContentsAndRemove(class gsl::basic_string_span<char const, -1>, bool);
    MCAPI void postNormalTick(class BlockPos const &);
    MCAPI void setCustomDisplay(bool);
    MCAPI void setDisplayBlock(class Block const &);

//private:
    MCAPI void _registerLoopingSounds();

private:

};