// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#include "BlockCommandOrigin.hpp"
#include "Json.hpp"
#define EXTRA_INCLUDE_PART_MINECARTBLOCKCOMMANDORIGIN
#include "Extra/MinecartBlockCommandOriginAPI.hpp"
#undef EXTRA_INCLUDE_PART_MINECARTBLOCKCOMMANDORIGIN
class MinecartBlockCommandOrigin : public BlockCommandOrigin {
#include "Extra/MinecartBlockCommandOriginAPI.hpp"
public:
    /*0*/ virtual ~MinecartBlockCommandOrigin();
    /*1*/ virtual std::string const& getRequestId() const;
    /*2*/ virtual class BlockPos getBlockPosition() const;
    /*3*/ virtual class Vec3 getWorldPosition() const;
    /*4*/ virtual class Level* getLevel() const;
    /*5*/ virtual class Actor* getEntity() const;
    /*6*/ virtual int /*enum enum CommandPermissionLevel*/ getPermissionsLevel() const;
    /*7*/ virtual std::unique_ptr<class CommandOrigin> clone() const;
    /*8*/ virtual class std::optional<class BlockPos> getCursorHitBlockPos() const;
    /*9*/ virtual class std::optional<class Vec3> getCursorHitPos() const;
    /*10*/ virtual bool canUseAbility(int /*enum enum AbilitiesIndex*/) const;
    /*11*/ virtual bool canUseCommandsWithoutCheatsEnabled() const;
    /*12*/ virtual bool isSelectorExpansionAllowed() const;
    /*13*/ virtual unsigned char getSourceSubId() const;
    /*14*/ virtual class CommandOrigin const& getOutputReceiver() const;
    /*15*/ virtual int /*enum enum CommandOriginType*/ getOriginType() const;
    /*16*/ virtual class mce::UUID const& getUUID() const;
    /*17*/ virtual void handleCommandOutputCallback(class Json::Value&&) const;
    /*18*/ virtual class CompoundTag serialize() const;
    /*19*/ virtual bool isValid() const;
    /*20*/ virtual class BaseCommandBlock* _getBaseCommandBlock(class BlockSource&) const;
    /*21*/ virtual class CommandBlockActor* _getBlockEntity(class BlockSource&) const;

    MCAPI static std::unique_ptr<class MinecartBlockCommandOrigin> load(class CompoundTag const&, class Level&);

protected:

private:
};