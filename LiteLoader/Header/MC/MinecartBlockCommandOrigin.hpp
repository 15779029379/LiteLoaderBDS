/**
 * @file  MinecartBlockCommandOrigin.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Json.hpp"
#include "BlockCommandOrigin.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class MinecartBlockCommandOrigin.
 *
 */
class MinecartBlockCommandOrigin : public BlockCommandOrigin {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_MINECARTBLOCKCOMMANDORIGIN
public:
    class MinecartBlockCommandOrigin& operator=(class MinecartBlockCommandOrigin const &) = delete;
    MinecartBlockCommandOrigin(class MinecartBlockCommandOrigin const &) = delete;
    MinecartBlockCommandOrigin() = delete;
#endif

public:
    virtual ~MinecartBlockCommandOrigin();
    virtual class BlockPos getBlockPosition() const;
    virtual class Vec3 getWorldPosition() const;
    virtual class Actor * getEntity() const;
    virtual std::unique_ptr<class CommandOrigin> clone() const;
    virtual bool canUseCommandsWithoutCheatsEnabled() const;
    virtual enum CommandOriginType getOriginType() const;
    virtual class CompoundTag serialize() const;
    virtual bool isValid() const;
    virtual class BaseCommandBlock * _getBaseCommandBlock(class BlockSource &) const;
    virtual class CommandBlockActor * _getBlockEntity(class BlockSource &) const;
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_MINECARTBLOCKCOMMANDORIGIN
#endif
    MCAPI MinecartBlockCommandOrigin(class BlockSource &, struct ActorUniqueID const &);
    MCAPI static std::unique_ptr<class MinecartBlockCommandOrigin> load(class CompoundTag const &, class Level &);

};