// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#define EXTRA_INCLUDE_PART
#include "Extra/MinecraftCommandsAPI.hpp"
#undef EXTRA_INCLUDE_PART
class MinecraftCommands {
#include "Extra/MinecraftCommandsAPI.hpp"
public:
    virtual ~MinecraftCommands();

public:
    //MCAPI MinecraftCommands(class Minecraft&, class Automation::AutomationClient&);
    MCAPI struct MCRESULT executeCommand(class std::shared_ptr<class CommandContext>, bool) const;
    MCAPI class CommandRegistry& getRegistry();
    MCAPI void handleOutput(class CommandOrigin const&, class CommandOutput const&) const;
    MCAPI void initCoreEnums(class IWorldRegistriesProvider const&, class ActorFactory const&, class Experiments const&, class BaseGameVersion const&);
    MCAPI void initCoreEnumsServer(class ActorDefinitionGroup const&);
    MCAPI void runCommand(class Command&, class CommandOrigin&);
    MCAPI void runCommand(class HashedString const&, class CommandOrigin&, enum CurrentCmdVersion);
    MCAPI void setRegistryNetworkUpdateCallback(class std::function<void(class Packet const&)>) const;

    MCAPI static enum CommandOutputType getOutputType(class CommandOrigin const&);
    MCAPI static void initBlockEnum(class CommandRegistry&, class BaseGameVersion const&);
    MCAPI static void initItemEnum(class CommandRegistry&, class BaseGameVersion const&);
};