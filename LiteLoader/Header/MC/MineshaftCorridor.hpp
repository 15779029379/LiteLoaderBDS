// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#include "MineshaftPiece.hpp"
#define EXTRA_INCLUDE_PART_MINESHAFTCORRIDOR
#include "Extra/MineshaftCorridorAPI.hpp"
#undef EXTRA_INCLUDE_PART_MINESHAFTCORRIDOR
class MineshaftCorridor : public MineshaftPiece {
#include "Extra/MineshaftCorridorAPI.hpp"
public:
    /*0*/ virtual ~MineshaftCorridor();
    /*1*/ virtual class PoolElementStructurePiece* asPoolElement();
    /*2*/ virtual int /*enum enum StructurePieceType*/ getType() const;
    /*3*/ virtual void addChildren(class StructurePiece&, std::vector<std::unique_ptr<class StructurePiece>>&, class Random&);
    /*4*/ virtual bool postProcess(class BlockSource&, class Random&, class BoundingBox const&);
    /*5*/ virtual void postProcessMobsAt(class BlockSource&, class Random&, class BoundingBox const&);
    /*6*/ virtual void addHardcodedSpawnAreas(class LevelChunk&) const;

    MCAPI void _placeCobWeb(class BlockSource&, class BoundingBox const&, class Random&, float, int, int, int);
    MCAPI void _placeSupport(class BlockSource&, class BoundingBox const&, int, int, int, int, int, class Random&);

protected:

private:
    MCAPI void _fillPillarDownOrChainUp(class BlockSource&, int, int, int, class BoundingBox const&);
    MCAPI void _placeDoubleLowerOrUpperSupport(class BlockSource&, class BoundingBox const&, int, int, int);
};