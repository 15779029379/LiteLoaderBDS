/**
 * @file  MolangDescriptor.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "ItemDescriptor.hpp"
#include "Json.hpp"
#include "ItemTagDescriptor.hpp"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

/**
 * @brief MC class MolangDescriptor.
 *
 */
class MolangDescriptor : public ItemTagDescriptor {

#define AFTER_EXTRA

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_MOLANGDESCRIPTOR
public:
    class MolangDescriptor& operator=(class MolangDescriptor const &) = delete;
    MolangDescriptor(class MolangDescriptor const &) = delete;
    MolangDescriptor() = delete;
#endif

public:
    virtual std::unique_ptr<struct ItemDescriptor::BaseDescriptor> clone() const;
    virtual bool sameItems(struct ItemDescriptor::BaseDescriptor const &, bool) const;
    virtual bool sameItem(struct ItemDescriptor::ItemEntry const &, bool) const;
    virtual std::string const & getFullName() const;
    virtual class std::map<std::string, std::string, struct std::less<std::string>, class std::allocator<struct std::pair<std::string const, std::string>>> toMap() const;
    virtual class std::optional<class CompoundTag> save() const;
    virtual void serialize(class Json::Value &) const;
    virtual enum ItemDescriptor::InternalType getType() const;
    virtual void __unk_vfn_11();
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_MOLANGDESCRIPTOR
#endif

};