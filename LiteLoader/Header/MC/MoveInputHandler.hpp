/**
 * @file  MoveInputHandler.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "MoveInput.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class MoveInputHandler.
 *
 */
class MoveInputHandler : public MoveInput {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_MOVEINPUTHANDLER
public:
    class MoveInputHandler& operator=(class MoveInputHandler const &) = delete;
    MoveInputHandler(class MoveInputHandler const &) = delete;
#endif

public:
    virtual ~MoveInputHandler();
    virtual void tick(struct IPlayerMovementProxy &);
    virtual void __unk_vfn_2();
    virtual void __unk_vfn_3();
    virtual void clearInputState();
    virtual void __unk_vfn_5();
    virtual bool isChangeHeight() const;
    virtual bool isPlayerMoving() const;
    virtual class Vec3 const & getGazeDirection() const;
    virtual struct MoveInputComponent extractInputComponent() const;
    virtual void fillInputPacket(class PlayerAuthInputPacket &);
    virtual void __unk_vfn_15() = 0;
    virtual std::unique_ptr<struct IReplayableActorInput> createSnapshot();
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_MOVEINPUTHANDLER
#endif
    MCAPI bool wantsMoveForward() const;

//protected:
    MCAPI MoveInputHandler();

protected:

};