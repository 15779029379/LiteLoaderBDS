/**
 * @file  PackSettingsError.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class PackSettingsError.
 *
 */
class PackSettingsError {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_PACKSETTINGSERROR
public:
    class PackSettingsError& operator=(class PackSettingsError const &) = delete;
    PackSettingsError(class PackSettingsError const &) = delete;
    PackSettingsError() = delete;
#endif

public:
    virtual ~PackSettingsError();
    virtual std::string getLocErrorMessage() const;
    virtual class std::unordered_map<int, std::string, struct std::hash<int>, struct std::equal_to<int>, class std::allocator<struct std::pair<int const, std::string>>> const & getLocErrorMessageMap() const;
    virtual class std::unordered_map<int, std::string, struct std::hash<int>, struct std::equal_to<int>, class std::allocator<struct std::pair<int const, std::string>>> const & getEventErrorMessageMap() const;
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_PACKSETTINGSERROR
#endif
    MCAPI PackSettingsError(std::vector<std::string> const &);

};