// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#include "ConsumerComponent.hpp"
#define EXTRA_INCLUDE_PART_PISTONCONSUMER
#include "Extra/PistonConsumerAPI.hpp"
#undef EXTRA_INCLUDE_PART_PISTONCONSUMER
class PistonConsumer : public ConsumerComponent {
#include "Extra/PistonConsumerAPI.hpp"
public:
    /*0*/ virtual ~PistonConsumer();
    /*1*/ virtual int getStrength() const;
    /*2*/ virtual int getDirection() const;
    /*3*/ virtual void setStrength(int);
    /*4*/ virtual void setDirection(unsigned char);
    /*5*/ virtual bool canConsumePowerAnyDirection() const;
    /*6*/ virtual void __unk_vfn_0();
    /*7*/ virtual bool canStopPower() const;
    /*8*/ virtual void setStopPower(bool);
    /*9*/ virtual bool addSource(class CircuitSceneGraph&, class CircuitTrackingInfo const&, int&, bool&);
    /*10*/ virtual bool allowConnection(class CircuitSceneGraph&, class CircuitTrackingInfo const&, bool&);
    /*11*/ virtual void checkLock(class CircuitSystem&, class BlockPos const&);
    /*12*/ virtual void cacheValues(class CircuitSystem&, class BlockPos const&);
    /*13*/ virtual void updateDependencies(class CircuitSceneGraph&, class BlockPos const&);
    /*14*/ virtual void __unk_vfn_1();
    /*15*/ virtual bool isHalfPulse() const;
    /*16*/ virtual void __unk_vfn_2();
    /*17*/ virtual bool isSecondaryPowered() const;
    /*18*/ virtual int /*enum enum CircuitComponentType*/ getCircuitComponentType() const;

    MCAPI void setBlockPowerFace(unsigned char);

protected:

private:
};