/**
 * @file  PrecompiledCommandOrigin.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Json.hpp"
#include "CommandOrigin.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class PrecompiledCommandOrigin.
 *
 */
class PrecompiledCommandOrigin : public CommandOrigin {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_PRECOMPILEDCOMMANDORIGIN
public:
    class PrecompiledCommandOrigin& operator=(class PrecompiledCommandOrigin const &) = delete;
    PrecompiledCommandOrigin(class PrecompiledCommandOrigin const &) = delete;
    PrecompiledCommandOrigin() = delete;
#endif

public:
    virtual ~PrecompiledCommandOrigin();
    virtual std::string const & getRequestId() const;
    virtual std::string getName() const;
    virtual class BlockPos getBlockPosition() const;
    virtual class Vec3 getWorldPosition() const;
    virtual class std::optional<class Vec2> getRotation() const;
    virtual class Level * getLevel() const;
    virtual class Dimension * getDimension() const;
    virtual class Actor * getEntity() const;
    virtual enum CommandPermissionLevel getPermissionsLevel() const;
    virtual std::unique_ptr<class CommandOrigin> clone() const;
    virtual bool hasChatPerms() const;
    virtual bool hasTellPerms() const;
    virtual bool canUseAbility(enum AbilitiesIndex) const;
    virtual bool isWorldBuilder() const;
    virtual bool canUseCommandsWithoutCheatsEnabled() const;
    virtual bool isSelectorExpansionAllowed() const;
    virtual enum CommandOriginType getOriginType() const;
    virtual class CompoundTag serialize() const;
    virtual bool isValid() const;
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_PRECOMPILEDCOMMANDORIGIN
#endif

};