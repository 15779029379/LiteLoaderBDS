// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#include "Bedrock.hpp"
#define EXTRA_INCLUDE_PART_RANDOM
#include "Extra/RandomAPI.hpp"
#undef EXTRA_INCLUDE_PART_RANDOM
class Random {
#include "Extra/RandomAPI.hpp"
public:
    virtual ~Random();
    virtual int nextInt();
    virtual int nextInt(int);
    virtual __int64 nextLong();
    virtual bool nextBoolean();
    virtual float nextFloat();
    virtual double nextDouble();
    virtual double nextGaussianDouble();
    virtual void consumeCount(unsigned int);
    virtual std::unique_ptr<class IRandom> fork();

public:
    MCAPI float nextFloat(float, float);
    MCAPI float nextGaussianFloat();
    MCAPI int nextGaussianInt(int);
    MCAPI int nextInt(int, int);
    MCAPI int nextIntInclusive(int, int);

    MCAPI static class Random& getThreadLocal();

private:
    MCAPI static class Bedrock::Threading::ThreadLocalObject<class Random, class std::allocator<class Random>> mThreadLocalRandom;
};