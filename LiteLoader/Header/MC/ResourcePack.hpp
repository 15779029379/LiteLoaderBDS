// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#define EXTRA_INCLUDE_PART_RESOURCEPACK
#include "Extra/ResourcePackAPI.hpp"
#undef EXTRA_INCLUDE_PART_RESOURCEPACK
class ResourcePack {
#include "Extra/ResourcePackAPI.hpp"
public:
    virtual ~ResourcePack();

public:
    MCAPI ResourcePack(class Pack&);
    MCAPI bool areKnownFilesValid();
    MCAPI void forEachIn(class Core::Path const&, class std::function<void(class Core::Path const&)>, int, bool) const;
    MCAPI void generateAssetSet();
    MCAPI class PackManifest& getManifest();
    MCAPI bool getResource(class Core::Path const&, std::string&, int) const;
    MCAPI bool hasResource(class Core::Path const&, int) const;
    MCAPI void setAsSlicePack();
    MCAPI void setLocale(std::string const&);

    MCAPI static class Core::PathBuffer<std::string> const RESOURCE_PACK_BUG_ICON_PATH;
    MCAPI static class Core::PathBuffer<std::string> const RESOURCE_PACK_ICON_PATH;
    MCAPI static class Core::PathBuffer<std::string> const TEXTURES_LIST_PATH;

private:
    MCAPI void _createSubpack(struct SubpackInfo const&);
    MCAPI void _createSubpacks();
    MCAPI void _generateIconPath();
};