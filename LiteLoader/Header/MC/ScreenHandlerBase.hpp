// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#define EXTRA_INCLUDE_PART_SCREENHANDLERBASE
#include "Extra/ScreenHandlerBaseAPI.hpp"
#undef EXTRA_INCLUDE_PART_SCREENHANDLERBASE
class ScreenHandlerBase {
#include "Extra/ScreenHandlerBaseAPI.hpp"
public:
    /*0*/ virtual ~ScreenHandlerBase();
    /*1*/ virtual int /*enum enum ItemStackNetResult*/ handleAction(class ItemStackRequestAction const&);
    /*2*/ virtual int /*enum enum ItemStackNetResult*/ endRequest();
    /*
    inline void postRequest(bool a0){
        void (ScreenHandlerBase::*rv)(bool);
        *((void**)&rv) = dlsym("?postRequest@ScreenHandlerBase@@UEAAX_N@Z");
        return (this->*rv)(std::forward<bool>(a0));
    }
    inline void endRequestBatch(){
        void (ScreenHandlerBase::*rv)();
        *((void**)&rv) = dlsym("?endRequestBatch@ScreenHandlerBase@@UEAAXXZ");
        return (this->*rv)();
    }
    */

protected:
    MCAPI class std::shared_ptr<class SimpleSparseContainer> _tryGetSparseContainer(enum ContainerEnumName);

private:
};