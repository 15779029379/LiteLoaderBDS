// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#include "Scripting.hpp"
#include "ScriptObject.hpp"

#define BEFORE_EXTRA //DO NOT EDIT THIS LINE
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA //DO NOT EDIT THIS LINE

class ScriptBlockPermutation : public ScriptObject {

#define AFTER_EXTRA //DO NOT EDIT THIS LINE
// Add Member There

#undef AFTER_EXTRA //DO NOT EDIT THIS LINE

public:
    /*0*/ virtual ~ScriptBlockPermutation();

    /*
    inline  ~ScriptBlockPermutation(){
         (ScriptBlockPermutation::*rv)();
        *((void**)&rv) = dlsym("??1ScriptBlockPermutation@@UEAA@XZ");
        return (this->*rv)();
    }
    */

    MCAPI class Scripting::StrongTypedObjectHandle<class ScriptBlockPermutation> clone() const;
    MCAPI std::vector<class Scripting::StrongObjectHandle> getAllProperties();
    MCAPI class Block const& getBlock() const;
    MCAPI class Scripting::Result<class Scripting::StrongObjectHandle> getProperty(std::string const&);
    MCAPI std::vector<std::string> getTags() const;
    MCAPI bool hasTag(std::string const&) const;
    MCAPI void setBlock(class Block const&);
    MCAPI static class Scripting::ClassBindingBuilder<class ScriptBlockPermutation> bind(struct Scripting::Version);

protected:


private:

    MCAPI class Scripting::Result<class Scripting::StrongObjectHandle> _createProperty(std::string const&);
};