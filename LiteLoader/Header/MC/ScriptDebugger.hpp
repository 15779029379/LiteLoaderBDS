/**
 * @file  ScriptDebugger.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Scripting.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class ScriptDebugger.
 *
 */
class ScriptDebugger {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SCRIPTDEBUGGER
public:
    class ScriptDebugger& operator=(class ScriptDebugger const &) = delete;
    ScriptDebugger(class ScriptDebugger const &) = delete;
    ScriptDebugger() = delete;
#endif

public:
    virtual bool listen(unsigned short);
    virtual bool connect(std::string const &, unsigned short);
    virtual void close();
    virtual void startProfiler();
    virtual void stopProfiler(std::string const &);
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_SCRIPTDEBUGGER
#endif
    MCAPI ScriptDebugger(class Scripting::ScriptEngine &, class IScriptDebuggerWatchdog &, std::unique_ptr<class IScriptTelemetryLogger>);
    MCAPI void checkConnections();

//private:
    MCAPI class Scripting::IDebuggerController * _createController();
    MCAPI void _releaseController();

private:

};