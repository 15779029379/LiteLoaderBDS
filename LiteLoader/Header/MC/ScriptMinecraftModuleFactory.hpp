// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Scripting.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class ScriptMinecraftModuleFactory {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SCRIPTMINECRAFTMODULEFACTORY
public:
    class ScriptMinecraftModuleFactory& operator=(class ScriptMinecraftModuleFactory const&) = delete;
    ScriptMinecraftModuleFactory(class ScriptMinecraftModuleFactory const&) = delete;
    ScriptMinecraftModuleFactory() = delete;
#endif

public:
    /*0*/ virtual ~ScriptMinecraftModuleFactory();
    /*1*/ virtual void __unk_vfn_0();
    /*2*/ virtual void __unk_vfn_1();
    /*3*/ virtual void __unk_vfn_2();
    /*4*/ virtual void __unk_vfn_3();
    /*5*/ virtual void __unk_vfn_4();
    MCAPI static class std::unordered_map<std::string, std::unique_ptr<class IComponentFactory>, struct std::hash<std::string >, struct std::equal_to<std::string >, class std::allocator<struct std::pair<std::string const, std::unique_ptr<class IComponentFactory> > > >& getActorComponentFactoriesV1();
    MCAPI static std::string getModuleUUIDAsString();
    MCAPI static struct Scripting::ModuleDescriptor makeModuleDescriptorFor(struct Scripting::Version&&);

protected:

private:
    MCAPI static char const* ModuleName;
    MCAPI static class mce::UUID const ModuleUUID;

};