/**
 * @file  ServerContentKeyProvider.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class ServerContentKeyProvider.
 *
 */
class ServerContentKeyProvider {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SERVERCONTENTKEYPROVIDER
public:
    class ServerContentKeyProvider& operator=(class ServerContentKeyProvider const &) = delete;
    ServerContentKeyProvider(class ServerContentKeyProvider const &) = delete;
    ServerContentKeyProvider() = delete;
#endif

public:
    virtual ~ServerContentKeyProvider();
    virtual std::string getContentKey(class ContentIdentity const &) const;
    virtual void __unk_vfn_2();
    virtual void __unk_vfn_3();
    virtual void __unk_vfn_4();
    virtual void __unk_vfn_5();
    virtual bool canAccess(class ContentIdentity const &) const;
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_SERVERCONTENTKEYPROVIDER
    MCVAPI void clearTempContentKeys();
    MCVAPI void setTempContentKeys(class std::unordered_map<class ContentIdentity, std::string, struct std::hash<class ContentIdentity>, struct std::equal_to<class ContentIdentity>, class std::allocator<struct std::pair<class ContentIdentity const, std::string>>> const &);
#endif

};