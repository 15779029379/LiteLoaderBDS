// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class ServerLocator {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SERVERLOCATOR
public:
    class ServerLocator& operator=(class ServerLocator const&) = delete;
    ServerLocator(class ServerLocator const&) = delete;
    ServerLocator() = delete;
#endif

public:
    /*0*/ virtual ~ServerLocator();
    /*1*/ virtual void __unk_vfn_0() = 0;
    /*2*/ virtual void __unk_vfn_1() = 0;
    /*3*/ virtual void __unk_vfn_2() = 0;
    /*4*/ virtual void __unk_vfn_3() = 0;
    /*5*/ virtual void __unk_vfn_4() = 0;
    /*6*/ virtual void __unk_vfn_5() = 0;
    /*7*/ virtual void __unk_vfn_6() = 0;
    /*8*/ virtual void __unk_vfn_7() = 0;
    /*9*/ virtual void __unk_vfn_8() = 0;
    /*10*/ virtual void __unk_vfn_9() = 0;
    /*11*/ virtual void __unk_vfn_10() = 0;
    /*12*/ virtual void __unk_vfn_11() = 0;
    /*13*/ virtual void __unk_vfn_12() = 0;
    /*14*/ virtual void __unk_vfn_13() = 0;
    /*
    inline void _onEnable(){
        void (ServerLocator::*rv)();
        *((void**)&rv) = dlsym("?_onEnable@ServerLocator@@EEAAXXZ");
        return (this->*rv)();
    }
    inline void _onDisable(){
        void (ServerLocator::*rv)();
        *((void**)&rv) = dlsym("?_onDisable@ServerLocator@@EEAAXXZ");
        return (this->*rv)();
    }
    inline  ~ServerLocator(){
         (ServerLocator::*rv)();
        *((void**)&rv) = dlsym("??1ServerLocator@@UEAA@XZ");
        return (this->*rv)();
    }
    */

protected:

private:

};