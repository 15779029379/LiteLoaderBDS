// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class ServerPlayerRewindListener {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SERVERPLAYERREWINDLISTENER
public:
    class ServerPlayerRewindListener& operator=(class ServerPlayerRewindListener const&) = delete;
    ServerPlayerRewindListener(class ServerPlayerRewindListener const&) = delete;
    ServerPlayerRewindListener() = delete;
#endif

public:
    /*0*/ virtual ~ServerPlayerRewindListener();
    /*1*/ virtual void __unk_vfn_0();
    /*2*/ virtual void __unk_vfn_1();
    /*3*/ virtual void __unk_vfn_2();
    /*4*/ virtual void __unk_vfn_3();
    /*5*/ virtual void __unk_vfn_4();
    /*6*/ virtual void __unk_vfn_5();
    /*7*/ virtual enum EventResult onPlayerAuthInputReceived(class Player&, class PlayerAuthInputPacket const&);
    /*8*/ virtual enum EventResult onPlayerAuthInputApplied(class Player&, class PlayerAuthInputPacket const&);
    /*9*/ virtual void __unk_vfn_6();
    /*10*/ virtual void __unk_vfn_7();
    /*11*/ virtual void __unk_vfn_8();
    /*12*/ virtual void __unk_vfn_9();
    /*13*/ virtual void __unk_vfn_10();
    /*14*/ virtual void __unk_vfn_11();
    /*15*/ virtual void __unk_vfn_12();
    /*16*/ virtual void __unk_vfn_13();
    /*17*/ virtual void __unk_vfn_14();
    /*18*/ virtual void __unk_vfn_15();
    /*19*/ virtual void __unk_vfn_16();
    /*20*/ virtual void __unk_vfn_17();
    /*21*/ virtual void __unk_vfn_18();
    /*22*/ virtual void __unk_vfn_19();
    /*23*/ virtual void __unk_vfn_20();
    /*24*/ virtual void __unk_vfn_21();
    /*25*/ virtual void __unk_vfn_22();
    /*26*/ virtual void __unk_vfn_23();
    /*27*/ virtual void __unk_vfn_24();
    /*28*/ virtual void __unk_vfn_25();
    /*29*/ virtual void __unk_vfn_26();
    /*30*/ virtual void __unk_vfn_27();
    /*31*/ virtual void __unk_vfn_28();
    /*32*/ virtual void __unk_vfn_29();
    /*33*/ virtual void __unk_vfn_30();
    /*34*/ virtual void __unk_vfn_31();
    /*35*/ virtual void __unk_vfn_32();
    /*36*/ virtual void __unk_vfn_33();
    /*37*/ virtual void __unk_vfn_34();
    /*38*/ virtual void __unk_vfn_35();
    /*39*/ virtual void __unk_vfn_36();
    /*40*/ virtual void __unk_vfn_37();
    /*41*/ virtual void __unk_vfn_38();
    /*42*/ virtual void __unk_vfn_39();
    /*43*/ virtual void __unk_vfn_40();
    /*44*/ virtual void __unk_vfn_41();
    /*45*/ virtual void __unk_vfn_42();
    /*46*/ virtual void __unk_vfn_43();
    /*47*/ virtual void __unk_vfn_44();
    /*48*/ virtual void __unk_vfn_45();
    /*49*/ virtual void __unk_vfn_46();
    /*50*/ virtual void __unk_vfn_47();
    /*51*/ virtual void __unk_vfn_48();
    /*52*/ virtual void __unk_vfn_49();
    /*53*/ virtual void __unk_vfn_50();
    /*54*/ virtual void __unk_vfn_51();
    /*55*/ virtual void __unk_vfn_52();
    /*56*/ virtual void __unk_vfn_53();
    /*57*/ virtual void __unk_vfn_54();
    /*58*/ virtual void __unk_vfn_55();
    /*59*/ virtual void __unk_vfn_56();
    /*60*/ virtual void __unk_vfn_57();
    MCAPI static void _onPlayerAuthInputReceived(unsigned __int64, struct PlayerMovementSettings const&, class EntityContext&, struct IActorMovementProxy&);

protected:

private:

};