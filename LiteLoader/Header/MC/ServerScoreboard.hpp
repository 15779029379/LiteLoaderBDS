// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#define EXTRA_INCLUDE_PART
#include "Extra/ServerScoreboardAPI.hpp"
#undef EXTRA_INCLUDE_PART
class ServerScoreboard {
#include "Extra/ServerScoreboardAPI.hpp"
public:
    virtual ~ServerScoreboard();
    virtual class DisplayObjective const* setDisplayObjective(std::string const&, class Objective const&, int /*enum ObjectiveSortOrder*/);
    virtual class Objective* clearDisplayObjective(std::string const&);
    virtual struct ScoreboardId const& createScoreboardId(std::string const&);
    virtual struct ScoreboardId const& createScoreboardId(class Actor const&);
    virtual struct ScoreboardId const& createScoreboardId(class Player const&);
    virtual void onObjectiveAdded(class Objective const&);
    virtual void onObjectiveRemoved(class Objective&);
    virtual void onScoreChanged(struct ScoreboardId const&, class Objective const&);
    virtual void onPlayerScoreRemoved(struct ScoreboardId const&, class Objective const&);
    virtual void onPlayerJoined(class Player const&);
    virtual void onPlayerIdentityUpdated(struct PlayerScoreboardId const&);
    virtual void tick();
    virtual void setPacketSender(class PacketSender*);
    virtual void writeToLevelStorage();
    virtual void unk_vfn_15();

public:
    MCAPI void deserialize(std::unique_ptr<class CompoundTag>);
    MCAPI std::unique_ptr<class CompoundTag> serialize() const;
    MCAPI void setClearDisplayObjectiveCallback(class std::function<void(std::string const&, class DisplayObjective const&)>);
    MCAPI void setIdentityUpdatedCallback(class std::function<void(struct ScoreboardId const&)>);
    MCAPI void setScoreChangedCallback(class std::function<void(struct ScoreboardId const&)>);
    MCAPI void setScoreRemovedCallback(class std::function<void(struct ScoreboardId const&)>);
    MCAPI void setSetDisplayObjectiveCallback(class std::function<void(std::string const&, class DisplayObjective const&)>);

private:
    MCAPI void _stopTrackingObjective(class Objective const&);
    MCAPI struct ScorePacketInfo _unpackIdentityDefToScorePacket(class ScoreboardIdentityRef const&, std::string const&, int);
};