// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#include "ShapedRecipe.hpp"

#define BEFORE_EXTRA //DO NOT EDIT THIS LINE
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA //DO NOT EDIT THIS LINE

class ShapedChemistryRecipe : public ShapedRecipe {

#define AFTER_EXTRA //DO NOT EDIT THIS LINE
// Add Member There

#undef AFTER_EXTRA //DO NOT EDIT THIS LINE

public:
    /*0*/ virtual ~ShapedChemistryRecipe();
    /*1*/ virtual std::vector<class ItemInstance> const& assemble(class CraftingContainer&) const;
    /*2*/ virtual class RecipeIngredient const& getIngredient(int, int) const;
    /*3*/ virtual std::vector<class ItemInstance> const& getResultItem() const;
    /*4*/ virtual bool isShapeless() const;
    /*5*/ virtual bool matches(class CraftingContainer&, class Level&) const;
    /*6*/ virtual class mce::UUID const& getId() const;
    /*7*/ virtual class ItemPack const& getItemPack() const;
    /*8*/ virtual bool isMultiRecipe() const;
    /*9*/ virtual void loadResultList(class BlockPalette const&) const;


    MCAPI ShapedChemistryRecipe(class gsl::basic_string_span<char const, -1>, int, int, std::vector<class RecipeIngredient> const&, std::vector<class ItemInstance> const&, class HashedString, int, class mce::UUID const*);
    MCAPI static class mce::UUID const ID;

protected:


private:

};