/**
 * @file  ShearsItem.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Json.hpp"
#include "Item.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class ShearsItem.
 *
 */
class ShearsItem : public Item {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SHEARSITEM
public:
    class ShearsItem& operator=(class ShearsItem const &) = delete;
    ShearsItem(class ShearsItem const &) = delete;
    ShearsItem() = delete;
#endif

public:
    virtual ~ShearsItem();
    virtual void __unk_vfn_7();
    virtual void __unk_vfn_11();
    virtual void __unk_vfn_14();
    virtual void __unk_vfn_16();
    virtual bool canDestroySpecial(class Block const &) const;
    virtual void __unk_vfn_52();
    virtual void __unk_vfn_54();
    virtual int getEnchantSlot() const;
    virtual void __unk_vfn_67();
    virtual void __unk_vfn_71();
    virtual void __unk_vfn_72();
    virtual void __unk_vfn_73();
    virtual void __unk_vfn_76();
    virtual void __unk_vfn_80();
    virtual void __unk_vfn_81();
    virtual bool dispense(class BlockSource &, class Container &, int, class Vec3 const &, unsigned char) const;
    virtual float getDestroySpeed(class ItemStackBase const &, class Block const &) const;
    virtual void hurtActor(class ItemStack &, class Actor &, class Mob &) const;
    virtual bool mineBlock(class ItemStack &, class Block const &, int, int, int, class Actor *) const;
    virtual bool _useOn(class ItemStack &, class Actor &, class BlockPos, unsigned char, class Vec3 const &) const;
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_SHEARSITEM
#endif

};