/**
 * @file  ShieldItem.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Json.hpp"
#include "Item.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class ShieldItem.
 *
 */
class ShieldItem : public Item {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SHIELDITEM
public:
    class ShieldItem& operator=(class ShieldItem const &) = delete;
    ShieldItem(class ShieldItem const &) = delete;
    ShieldItem() = delete;
#endif

public:
    virtual ~ShieldItem();
    virtual void __unk_vfn_7();
    virtual void __unk_vfn_11();
    virtual void __unk_vfn_14();
    virtual void __unk_vfn_16();
    virtual bool isHandEquipped() const;
    virtual void __unk_vfn_52();
    virtual void __unk_vfn_54();
    virtual bool isValidRepairItem(class ItemStackBase const &, class ItemStackBase const &, class BaseGameVersion const &) const;
    virtual int getEnchantSlot() const;
    virtual void __unk_vfn_67();
    virtual void __unk_vfn_71();
    virtual void __unk_vfn_72();
    virtual void __unk_vfn_73();
    virtual void __unk_vfn_76();
    virtual void __unk_vfn_80();
    virtual void __unk_vfn_81();
    virtual class ItemStack & use(class ItemStack &, class Player &) const;
    virtual bool dispense(class BlockSource &, class Container &, int, class Vec3 const &, unsigned char) const;
    virtual void hurtActor(class ItemStack &, class Actor &, class Mob &) const;
    virtual void readUserData(class ItemStackBase &, class IDataInput &, class ReadOnlyBinaryStream &) const;
    virtual void writeUserData(class ItemStackBase const &, class IDataOutput &) const;
    virtual bool inventoryTick(class ItemStack &, class Level &, class Actor &, int, bool) const;
    virtual class HashedString const & getCooldownType() const;
    virtual int getCooldownTime() const;
    virtual enum InHandUpdateType getInHandUpdateType(class Player const &, class ItemInstance const &, class ItemInstance const &, bool, bool) const;
    virtual enum InHandUpdateType getInHandUpdateType(class Player const &, class ItemStack const &, class ItemStack const &, bool, bool) const;
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_SHIELDITEM
#endif
    MCAPI ShieldItem(std::string const &, int);
    MCAPI void playBlockSound(class Player *) const;
    MCAPI void playBreakSound(class Player *) const;
MCAPI static int const EFFECTIVE_BLOCK_DELAY;
MCAPI static int const IN_HAND_BLOCK_DURATION;
MCAPI static std::string const TIMESTAMP_TAG;

//private:
    MCAPI enum InHandUpdateType _getInHandUpdateType(class Player const &, class ItemStack const &, class ItemStack const &, bool, bool) const;

private:

};