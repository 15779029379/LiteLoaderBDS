// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#include "StructurePiece.hpp"
#define EXTRA_INCLUDE_PART_SHIPWRECKPIECE
#include "Extra/ShipwreckPieceAPI.hpp"
#undef EXTRA_INCLUDE_PART_SHIPWRECKPIECE
class ShipwreckPiece : public StructurePiece {
#include "Extra/ShipwreckPieceAPI.hpp"
public:
    virtual ~ShipwreckPiece();
    virtual void unk_vfn_2();
    virtual int /*enum StructurePieceType*/ getType() const;
    virtual void addChildren(class StructurePiece&, std::vector<std::unique_ptr<class StructurePiece>>&, class Random&);
    virtual bool postProcess(class BlockSource&, class Random&, class BoundingBox const&);
    virtual void postProcessMobsAt(class BlockSource&, class Random&, class BoundingBox const&);
    virtual bool canBeReplaced(class BlockSource&, int, int, int, class BoundingBox const&);
    virtual int getWorldZ(int, int);

private:
    MCAPI static std::string const* const const STRUCTURE_SHIPWRECK_TYPES;
    MCAPI static class BlockPos _calculateTargetPos(class BlockSource&, class BlockPos, enum Rotation, class BlockPos);
    MCAPI static class BlockPos _calculateTargetPosLegacy(class BlockSource&, class BlockPos, enum Rotation, class BlockPos);
};