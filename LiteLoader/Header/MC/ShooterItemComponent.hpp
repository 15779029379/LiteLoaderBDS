// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#define EXTRA_INCLUDE_PART_SHOOTERITEMCOMPONENT
#include "Extra/ShooterItemComponentAPI.hpp"
#undef EXTRA_INCLUDE_PART_SHOOTERITEMCOMPONENT
class ShooterItemComponent {
#include "Extra/ShooterItemComponentAPI.hpp"
public:
    virtual ~ShooterItemComponent();
    virtual bool checkComponentDataForContentErrors();
    virtual void unk_vfn_2();
    virtual void unk_vfn_3();
    virtual void unk_vfn_4();
    virtual std::unique_ptr<class CompoundTag> buildNetworkTag();
    virtual void initializeFromNetwork(class CompoundTag const&);

public:
    MCAPI ShooterItemComponent(class ComponentItem*);
    MCAPI ShooterItemComponent(class ShooterItemComponent const&);
    MCAPI bool releaseUsing(class ItemStack&, class Player*, int) const;
    MCAPI bool use(class ItemStack&, class Player&) const;

    MCAPI static void bindType();
    MCAPI static class HashedString const& getIdentifier();

private:
    MCAPI void _consumeAmmunition(class Player*, class ItemStack const&, int, bool, bool) const;
    MCAPI int _getAmmunition(class Player const*, bool, class ItemStack&, bool&) const;
    MCAPI void _shootProjectiles(class ItemStack&, class Player*, int) const;
};