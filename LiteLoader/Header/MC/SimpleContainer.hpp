/**
 * @file  SimpleContainer.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Container.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class SimpleContainer.
 *
 */
class SimpleContainer : public Container {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SIMPLECONTAINER
public:
    class SimpleContainer& operator=(class SimpleContainer const &) = delete;
    SimpleContainer(class SimpleContainer const &) = delete;
    SimpleContainer() = delete;
#endif

public:
    virtual ~SimpleContainer();
    virtual void serverInitItemStackIds(int, int, class std::function<void (int, class ItemStack const &)>);
    virtual class ItemStack const & getItem(int) const;
    virtual void setItem(int, class ItemStack const &);
    virtual int getContainerSize() const;
    virtual int getMaxStackSize() const;
    virtual void startOpen(class Player &);
    virtual void stopOpen(class Player &);
    virtual void __unk_vfn_22();
    virtual void __unk_vfn_23();
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_SIMPLECONTAINER
#endif
    MCAPI SimpleContainer(std::string const &, bool, int, enum ContainerType);

};