/**
 * @file  Skeleton.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Actor.hpp"
#include "HumanoidMonster.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class Skeleton.
 *
 */
class Skeleton : public HumanoidMonster {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SKELETON
public:
    class Skeleton& operator=(class Skeleton const &) = delete;
    Skeleton(class Skeleton const &) = delete;
    Skeleton() = delete;
#endif

public:
    virtual ~Skeleton();
    virtual void __unk_vfn_41();
    virtual void normalTick();
    virtual void passengerTick();
    virtual void __unk_vfn_61();
    virtual void __unk_vfn_68();
    virtual void __unk_vfn_82();
    virtual void __unk_vfn_85();
    virtual void __unk_vfn_88();
    virtual void __unk_vfn_96();
    virtual void __unk_vfn_99();
    virtual void __unk_vfn_106();
    virtual void __unk_vfn_108();
    virtual void __unk_vfn_109();
    virtual void __unk_vfn_111();
    virtual void setTarget(class Actor *);
    virtual bool canFreeze() const;
    virtual void __unk_vfn_182();
    virtual void __unk_vfn_196();
    virtual bool canBeAffected(class MobEffectInstance const &) const;
    virtual void __unk_vfn_222();
    virtual void __unk_vfn_223();
    virtual void getDebugText(std::vector<std::string> &);
    virtual void __unk_vfn_248();
    virtual void __unk_vfn_251();
    virtual void die(class ActorDamageSource const &);
    virtual void __unk_vfn_269();
    virtual void __unk_vfn_277();
    virtual void __unk_vfn_285();
    virtual void __unk_vfn_313();
    virtual bool doHurtTarget(class Actor *, enum ActorDamageCause const &);
    virtual void __unk_vfn_317();
    virtual void __unk_vfn_351();
    virtual void __unk_vfn_365();
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_SKELETON
    MCVAPI bool useNewAi() const;
#endif
    MCAPI Skeleton(class ActorDefinitionGroup *, struct ActorDefinitionIdentifier const &, class EntityContext &);
    MCAPI void setWitherParent(class WitherBoss *);

//private:

private:
MCAPI static class mce::UUID const SPEED_MODIFIER_ATTACK_UUID;

};