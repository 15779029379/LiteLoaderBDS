// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#include "Core.hpp"

#define BEFORE_EXTRA //DO NOT EDIT THIS LINE
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA //DO NOT EDIT THIS LINE

class SnapshotEnv {

#define AFTER_EXTRA //DO NOT EDIT THIS LINE
// Add Member There

#undef AFTER_EXTRA //DO NOT EDIT THIS LINE

public:
    /*0*/ virtual ~SnapshotEnv();
    /*1*/ virtual class leveldb::Status NewSequentialFile(std::string const&, class leveldb::SequentialFile* *);
    /*2*/ virtual class leveldb::Status NewRandomAccessFile(std::string const&, class leveldb::RandomAccessFile* *);
    /*3*/ virtual class leveldb::Status NewWritableFile(std::string const&, class leveldb::WritableFile* *);
    /*4*/ virtual class leveldb::Status NewAppendableFile(std::string const&, class leveldb::WritableFile* *);
    /*5*/ virtual void __unk_vfn_0();
    /*6*/ virtual void __unk_vfn_1();
    /*7*/ virtual class leveldb::Status DeleteFileA(std::string const&);
    /*8*/ virtual void __unk_vfn_2();
    /*9*/ virtual void __unk_vfn_3();
    /*10*/ virtual void __unk_vfn_4();
    /*11*/ virtual class leveldb::Status RenameFile(std::string const&, std::string const&);


    MCAPI SnapshotEnv(class leveldb::Env*);
    MCAPI std::vector<struct SnapshotFilenameAndLength> createSnapshot(class Core::Path const&);
    MCAPI void releaseSnapshot();

protected:


private:

    MCAPI bool _isQueuedForRemoval(class Core::PathBuffer<std::string > const&);
};