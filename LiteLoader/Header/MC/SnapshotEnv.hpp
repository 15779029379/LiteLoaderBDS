// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#include "Core.hpp"
#define EXTRA_INCLUDE_PART_SNAPSHOTENV
#include "Extra/SnapshotEnvAPI.hpp"
#undef EXTRA_INCLUDE_PART_SNAPSHOTENV
class SnapshotEnv {
#include "Extra/SnapshotEnvAPI.hpp"
public:
    virtual ~SnapshotEnv();
    virtual class leveldb::Status NewSequentialFile(std::string const&, class leveldb::SequentialFile**);
    virtual class leveldb::Status NewRandomAccessFile(std::string const&, class leveldb::RandomAccessFile**);
    virtual class leveldb::Status NewWritableFile(std::string const&, class leveldb::WritableFile**);
    virtual class leveldb::Status NewAppendableFile(std::string const&, class leveldb::WritableFile**);
    virtual void unk_vfn_5();
    virtual void unk_vfn_6();
    virtual class leveldb::Status DeleteFileA(std::string const&);
    virtual void unk_vfn_8();
    virtual void unk_vfn_9();
    virtual void unk_vfn_10();
    virtual class leveldb::Status RenameFile(std::string const&, std::string const&);

public:
    MCAPI std::vector<struct SnapshotFilenameAndLength> createSnapshot(class Core::Path const&);
    MCAPI void releaseSnapshot();

private:
    MCAPI bool _isQueuedForRemoval(class Core::PathBuffer<std::string> const&);
};