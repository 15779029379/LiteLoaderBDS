/**
 * @file  SneakingSystem.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

/**
 * @brief MC class SneakingSystem.
 *
 */
class SneakingSystem {

#define AFTER_EXTRA

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SNEAKINGSYSTEM
public:
    class SneakingSystem& operator=(class SneakingSystem const &) = delete;
    SneakingSystem(class SneakingSystem const &) = delete;
    SneakingSystem() = delete;
#endif

public:
    virtual ~SneakingSystem();
    virtual void __unk_vfn_1();
    virtual void __unk_vfn_2();
    virtual void tick(class StrictExecutionContext<struct Filter<class FlagComponent<struct ActorTickedFlag>>, struct Read<class FlagComponent<struct PlayerComponentFlag>>, struct Write<struct SneakingComponent, class ActorOwnerComponent>, struct AddRemove<>, struct GlobalRead<>, struct GlobalWrite<>, struct EntityFactoryT<>> &);
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_SNEAKINGSYSTEM
#endif
    MCAPI static void _tickSneakingSystem(class StrictEntityContext &, class FlagComponent<struct PlayerComponentFlag> const &, struct SneakingComponent &, class ActorOwnerComponent &);

};