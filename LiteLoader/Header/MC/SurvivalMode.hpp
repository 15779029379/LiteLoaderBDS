/**
 * @file  SurvivalMode.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "GameMode.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class SurvivalMode.
 *
 */
class SurvivalMode : public GameMode {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SURVIVALMODE
public:
    class SurvivalMode& operator=(class SurvivalMode const &) = delete;
    SurvivalMode(class SurvivalMode const &) = delete;
    SurvivalMode() = delete;
#endif

public:
    virtual ~SurvivalMode();
    virtual bool startDestroyBlock(class BlockPos const &, unsigned char, bool &);
    virtual bool destroyBlock(class BlockPos const &, unsigned char);
    virtual void startBuildBlock(class BlockPos const &, unsigned char);
    virtual bool buildBlock(class BlockPos const &, unsigned char, bool);
    virtual void tick();
    virtual bool useItem(class ItemStack &);
    virtual bool useItemOn(class ItemStack &, class BlockPos const &, unsigned char, class Vec3 const &, class Block const *);
    virtual bool interact(class Actor &, class Vec3 const &);
    virtual bool attack(class Actor &);
    virtual void setTrialMode(bool);
    virtual bool isInTrialMode();
    virtual void registerUpsellScreenCallback(class std::function<void (bool)>);
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_SURVIVALMODE
#endif
    MCAPI SurvivalMode(class Player &);

//private:
    MCAPI void _messagePlayers(std::string);
    MCAPI void _showTrialReminder(bool);

private:
MCAPI static bool mTrialHasEnded;

};