// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
#define EXTRA_INCLUDE_PART
#include "Extra/TargetGoalAPI.hpp"
#undef EXTRA_INCLUDE_PART
class TargetGoal {
#include "Extra/TargetGoalAPI.hpp"
public:
    virtual ~TargetGoal();
    virtual bool canUse();
    virtual bool canContinueToUse();
    virtual void unk_vfn_3();
    virtual void start();
    virtual void unk_vfn_5();
    virtual void tick();
    virtual void appendDebugInfo(std::string&);
    virtual void unk_vfn_8();
    virtual void unk_vfn_9();
    virtual bool _canAttack(class Mob*, class Actor*, bool, bool, struct MobDescriptor const**);

public:
    MCAPI TargetGoal(class Mob&, bool, int, bool, float, bool, int);
    MCAPI TargetGoal(class Mob&, std::vector<struct MobDescriptor> const&, bool, int, bool, float, bool, int);


protected:
    MCAPI bool _canAttack(class Actor*, bool, struct MobDescriptor const**);
    MCAPI bool _canReachAfterDelay(class Actor&);
    MCAPI bool _withinRange(class Actor const&);
};