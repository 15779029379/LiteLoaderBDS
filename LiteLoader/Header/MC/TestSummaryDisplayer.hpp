// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class TestSummaryDisplayer {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_TESTSUMMARYDISPLAYER
public:
    class TestSummaryDisplayer& operator=(class TestSummaryDisplayer const&) = delete;
    TestSummaryDisplayer(class TestSummaryDisplayer const&) = delete;
    TestSummaryDisplayer() = delete;
#endif

public:
    /*0*/ virtual ~TestSummaryDisplayer();
    /*1*/ virtual void __unk_vfn_0();
    /*2*/ virtual void __unk_vfn_1();
    /*3*/ virtual void __unk_vfn_2();
    /*4*/ virtual void __unk_vfn_3();
    /*5*/ virtual void __unk_vfn_4();
    /*6*/ virtual void __unk_vfn_5();
    /*
    inline void onTestFailed(class gametest::BaseGameTestInstance& a0){
        void (TestSummaryDisplayer::*rv)(class gametest::BaseGameTestInstance&);
        *((void**)&rv) = dlsym("?onTestFailed@TestSummaryDisplayer@@UEAAXAEAVBaseGameTestInstance@gametest@@@Z");
        return (this->*rv)(std::forward<class gametest::BaseGameTestInstance&>(a0));
    }
    inline void onTestPassed(class gametest::BaseGameTestInstance& a0){
        void (TestSummaryDisplayer::*rv)(class gametest::BaseGameTestInstance&);
        *((void**)&rv) = dlsym("?onTestPassed@TestSummaryDisplayer@@UEAAXAEAVBaseGameTestInstance@gametest@@@Z");
        return (this->*rv)(std::forward<class gametest::BaseGameTestInstance&>(a0));
    }
    */

protected:

private:
    MCAPI void _say(std::string const&, std::string const&) const;
    MCAPI void _showTestSummaryIfAllDone() const;

};