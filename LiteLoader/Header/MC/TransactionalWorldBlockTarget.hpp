/**
 * @file  TransactionalWorldBlockTarget.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class TransactionalWorldBlockTarget.
 *
 */
class TransactionalWorldBlockTarget {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_TRANSACTIONALWORLDBLOCKTARGET
public:
    class TransactionalWorldBlockTarget& operator=(class TransactionalWorldBlockTarget const &) = delete;
    TransactionalWorldBlockTarget(class TransactionalWorldBlockTarget const &) = delete;
    TransactionalWorldBlockTarget() = delete;
#endif

public:
    virtual ~TransactionalWorldBlockTarget();
    virtual class leveldb::Status NewSequentialFile(std::string const &, class leveldb::SequentialFile **);
    virtual class leveldb::Status NewRandomAccessFile(std::string const &, class leveldb::RandomAccessFile **);
    virtual class Block const * tryGetLiquidBlock(class BlockPos const &) const;
    virtual class Block const & getBlock(class BlockPos const &) const;
    virtual class Block const & getBlockNoBoundsCheck(class BlockPos const &) const;
    virtual class Block const & getExtraBlock(class BlockPos const &) const;
    virtual class gsl::span<class BlockDataFetchResult<class Block> const, -1> fetchBlocksInBox(class BoundingBox const &, class std::function<bool (class Block const &)>);
    virtual bool hasBiomeTag(unsigned __int64, class BlockPos const &) const;
    virtual bool setBlock(class BlockPos const &, class Block const &, int);
    virtual bool setBlockSimple(class BlockPos const &, class Block const &);
    virtual bool apply() const;
    virtual bool placeStructure(class BlockPos const &, class StructureTemplate &, class StructureSettings &);
    virtual bool mayPlace(class BlockPos const &, class Block const &) const;
    virtual bool canSurvive(class BlockPos const &, class Block const &) const;
    virtual short getMaxHeight() const;
    virtual short getMinHeight() const;
    virtual bool shimPlaceForOldFeatures(class Feature const &, class BlockPos const &, class Random &) const;
    virtual short getHeightmap(int, int);
    virtual bool isLegacyLevel();
    virtual class Biome const * getBiome(class BlockPos const &) const;
    virtual bool isInBounds(class Pos const &) const;
    virtual short getLocalWaterLevel(class BlockPos const &) const;
    virtual class LevelData const & getLevelData() const;
    virtual struct WorldGenContext const & getContext();
    virtual void disableBlockSimple();
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_TRANSACTIONALWORLDBLOCKTARGET
#endif
    MCAPI TransactionalWorldBlockTarget(class IBlockWorldGenAPI &);

};