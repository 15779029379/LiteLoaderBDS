/**
 * @file  VanillaGameModuleServer.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Bedrock.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class VanillaGameModuleServer.
 *
 */
class VanillaGameModuleServer {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_VANILLAGAMEMODULESERVER
public:
    class VanillaGameModuleServer& operator=(class VanillaGameModuleServer const &) = delete;
    VanillaGameModuleServer(class VanillaGameModuleServer const &) = delete;
#endif

public:
    virtual ~VanillaGameModuleServer();
    virtual void init(class ServerInstance &, class Level &);
    virtual void initializeBehaviorStack(class Experiments const &, class IResourcePackRepository &, class ResourcePackStack &, class BaseGameVersion const &);
    virtual void configureLevel(class Level &, class Experiments const &, class ResourcePackManager &, class BaseGameVersion const &);
    virtual void __unk_vfn_4();
    virtual void configureDocumentation(class IGameModuleDocumentation &, class ItemRegistryRef);
    virtual void __unk_vfn_6();
    virtual void setupCommands(class CommandRegistry &);
    virtual void configureServerNetworkHandler(class ServerInstance &, class gsl::not_null<class Bedrock::NonOwnerPointer<class ServerNetworkHandler>>);
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_VANILLAGAMEMODULESERVER
    MCVAPI void configureNewPlayer(class Player &);
    MCVAPI void tick();
#endif
    MCAPI VanillaGameModuleServer();

//private:
    MCAPI void _configureWorldGen(class IWorldRegistriesProvider &, struct SpawnSettings const &, class Experiments const &, class ResourcePackManager &, class BaseGameVersion const &);
    MCAPI void _registerListeners(class Level &);

private:

};