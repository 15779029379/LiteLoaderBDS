// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include "../Global.h"
#define EXTRA_INCLUDE_PART_VARINTDATAOUTPUT
#include "Extra/VarIntDataOutputAPI.hpp"
#undef EXTRA_INCLUDE_PART_VARINTDATAOUTPUT
class VarIntDataOutput {
#include "Extra/VarIntDataOutputAPI.hpp"
public:
    /*0*/ virtual ~VarIntDataOutput();
    /*1*/ virtual void __unk_vfn_0();
    /*2*/ virtual void __unk_vfn_1();
    /*3*/ virtual void writeFloat(float);
    /*4*/ virtual void writeDouble(double);
    /*5*/ virtual void writeByte(char);
    /*6*/ virtual void writeShort(short);
    /*7*/ virtual void writeInt(int);
    /*8*/ virtual void writeLongLong(__int64);
    /*9*/ virtual void writeBytes(void const*, unsigned __int64);
    /*
    inline void writeString(class gsl::basic_string_span<char const, -1> a0){
        void (VarIntDataOutput::*rv)(class gsl::basic_string_span<char const, -1>);
        *((void**)&rv) = dlsym("?writeString@VarIntDataOutput@@UEAAXV?$basic_string_span@$$CBD$0?0@gsl@@@Z");
        return (this->*rv)(std::forward<class gsl::basic_string_span<char const, -1>>(a0));
    }
    inline void writeLongString(class gsl::basic_string_span<char const, -1> a0){
        void (VarIntDataOutput::*rv)(class gsl::basic_string_span<char const, -1>);
        *((void**)&rv) = dlsym("?writeLongString@VarIntDataOutput@@UEAAXV?$basic_string_span@$$CBD$0?0@gsl@@@Z");
        return (this->*rv)(std::forward<class gsl::basic_string_span<char const, -1>>(a0));
    }
    */

protected:

private:
};