/**
 * @file  VineBlock.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "BlockLegacy.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class VineBlock.
 *
 */
class VineBlock : public BlockLegacy {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_VINEBLOCK
public:
    class VineBlock& operator=(class VineBlock const &) = delete;
    VineBlock(class VineBlock const &) = delete;
    VineBlock() = delete;
#endif

public:
    virtual ~VineBlock();
    virtual class AABB const & getAABB(class IConstBlockSource const &, class BlockPos const &, class Block const &, class AABB &, bool) const;
    virtual void __unk_vfn_19();
    virtual void __unk_vfn_29();
    virtual void __unk_vfn_30();
    virtual void __unk_vfn_32();
    virtual void __unk_vfn_33();
    virtual void __unk_vfn_34();
    virtual void __unk_vfn_36();
    virtual void __unk_vfn_37();
    virtual void __unk_vfn_38();
    virtual void __unk_vfn_39();
    virtual void __unk_vfn_40();
    virtual void __unk_vfn_41();
    virtual void __unk_vfn_42();
    virtual void __unk_vfn_44();
    virtual void __unk_vfn_45();
    virtual void __unk_vfn_46();
    virtual void __unk_vfn_47();
    virtual void __unk_vfn_48();
    virtual void __unk_vfn_49();
    virtual void __unk_vfn_59();
    virtual void __unk_vfn_60();
    virtual void __unk_vfn_73();
    virtual void __unk_vfn_80();
    virtual bool mayPlace(class BlockSource &, class BlockPos const &, unsigned char) const;
    virtual void neighborChanged(class BlockSource &, class BlockPos const &, class BlockPos const &) const;
    virtual int getResourceCount(class Randomize &, class Block const &, int) const;
    virtual void __unk_vfn_105();
    virtual class Block const & getPlacementBlock(class Actor &, class BlockPos const &, unsigned char, class Vec3 const &, int) const;
    virtual void __unk_vfn_124();
    virtual void __unk_vfn_126();
    virtual void __unk_vfn_127();
    virtual void __unk_vfn_132();
    virtual int getColor(class Block const &) const;
    virtual int getColor(class BlockSource &, class BlockPos const &, class Block const &) const;
    virtual class AABB const & getVisualShapeInWorld(class Block const &, class IConstBlockSource const &, class BlockPos const &, class AABB &, bool) const;
    virtual void __unk_vfn_148();
    virtual void __unk_vfn_157();
    virtual void __unk_vfn_168();
    virtual void __unk_vfn_169();
    virtual void __unk_vfn_170();
    virtual void playerDestroy(class Player &, class BlockPos const &, class Block const &) const;
    virtual void tick(class BlockSource &, class BlockPos const &, class Random &) const;
    virtual void randomTick(class BlockSource &, class BlockPos const &, class Random &) const;
    virtual void __unk_vfn_177();
    virtual class mce::Color getMapColor(class BlockSource &, class BlockPos const &) const;
    virtual void __unk_vfn_188();
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_VINEBLOCK
    MCVAPI bool waterSpreadCausesSpawn() const;
#endif
    MCAPI VineBlock(std::string const &, int);
    MCAPI void growDown(class BlockSource &, class BlockPos const &, int) const;
    MCAPI void growSideways(class BlockSource &, class BlockPos const &, int) const;
    MCAPI void growUp(class BlockSource &, class BlockPos const &, int) const;
MCAPI static int const VINE_ALL;
MCAPI static int const VINE_EAST;
MCAPI static int const VINE_NORTH;
MCAPI static int const VINE_SOUTH;
MCAPI static int const VINE_WEST;
    MCAPI static class Block const & getBlockForFace(unsigned char);
    MCAPI static bool isAcceptableNeighbour(class Block const &);

//private:
    MCAPI bool _canGrowDown(class BlockSource &, class BlockPos const &) const;
    MCAPI bool _canSideSpread(class BlockSource &, class BlockPos const &) const;
    MCAPI int _nextVineDirections(class BlockSource &, class BlockPos const &) const;

private:

};