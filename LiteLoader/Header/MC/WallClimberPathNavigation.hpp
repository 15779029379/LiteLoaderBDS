/**
 * @file  WallClimberPathNavigation.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "PathNavigation.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class WallClimberPathNavigation.
 *
 */
class WallClimberPathNavigation : public PathNavigation {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_WALLCLIMBERPATHNAVIGATION
public:
    class WallClimberPathNavigation& operator=(class WallClimberPathNavigation const &) = delete;
    WallClimberPathNavigation(class WallClimberPathNavigation const &) = delete;
    WallClimberPathNavigation() = delete;
#endif

public:
    virtual ~WallClimberPathNavigation();
    virtual void tick(class NavigationComponent &, class Mob &);
    virtual std::unique_ptr<class Path> createPath(class NavigationComponent &, class Mob &, class Vec3 const &);
    virtual std::unique_ptr<class Path> createPath(class NavigationComponent &, class Mob &, class Actor &);
    virtual bool moveTo(class NavigationComponent &, class Mob &, class Actor &, float);
    virtual bool canUpdatePath(class Mob const &) const;
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_WALLCLIMBERPATHNAVIGATION
#endif

};