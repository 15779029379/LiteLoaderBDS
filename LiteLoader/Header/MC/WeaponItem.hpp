/**
 * @file  WeaponItem.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Json.hpp"
#include "Item.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class WeaponItem.
 *
 */
class WeaponItem : public Item {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_WEAPONITEM
public:
    class WeaponItem& operator=(class WeaponItem const &) = delete;
    WeaponItem(class WeaponItem const &) = delete;
    WeaponItem() = delete;
#endif

public:
    virtual ~WeaponItem();
    virtual void __unk_vfn_7();
    virtual void __unk_vfn_11();
    virtual void __unk_vfn_14();
    virtual void __unk_vfn_16();
    virtual bool canDestroySpecial(class Block const &) const;
    virtual int getAttackDamage() const;
    virtual bool isHandEquipped() const;
    virtual void __unk_vfn_52();
    virtual void __unk_vfn_54();
    virtual bool canDestroyInCreative() const;
    virtual void appendFormattedHovertext(class ItemStackBase const &, class Level &, std::string &, bool) const;
    virtual bool isValidRepairItem(class ItemStackBase const &, class ItemStackBase const &, class BaseGameVersion const &) const;
    virtual int getEnchantSlot() const;
    virtual int getEnchantValue() const;
    virtual void __unk_vfn_67();
    virtual void __unk_vfn_71();
    virtual void __unk_vfn_72();
    virtual void __unk_vfn_73();
    virtual void __unk_vfn_76();
    virtual void __unk_vfn_80();
    virtual void __unk_vfn_81();
    virtual class ItemStack & use(class ItemStack &, class Player &) const;
    virtual float getDestroySpeed(class ItemStackBase const &, class Block const &) const;
    virtual void hurtActor(class ItemStack &, class Actor &, class Mob &) const;
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_WEAPONITEM
#endif
    MCAPI WeaponItem(std::string const &, int, class Item::Tier const &);

};