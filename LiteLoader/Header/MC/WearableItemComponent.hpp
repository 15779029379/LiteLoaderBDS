/**
 * @file  WearableItemComponent.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class WearableItemComponent.
 *
 */
class WearableItemComponent {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_WEARABLEITEMCOMPONENT
public:
    class WearableItemComponent& operator=(class WearableItemComponent const &) = delete;
    WearableItemComponent(class WearableItemComponent const &) = delete;
    WearableItemComponent() = delete;
#endif

public:
    virtual ~WearableItemComponent();
    virtual bool isNetworkComponent() const;
    virtual void __unk_vfn_2();
    virtual void __unk_vfn_3();
    virtual void __unk_vfn_4();
    virtual std::unique_ptr<class CompoundTag> buildNetworkTag() const;
    virtual bool initializeFromNetwork(class CompoundTag const &);
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_WEARABLEITEMCOMPONENT
#endif
    MCAPI enum EquipmentSlot getSlot() const;
    MCAPI bool use(class ItemStack &, class Player &) const;
    MCAPI static void bindType();
    MCAPI static class HashedString const & getIdentifier();

};