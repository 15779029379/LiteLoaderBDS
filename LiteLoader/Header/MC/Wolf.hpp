/**
 * @file  Wolf.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Actor.hpp"
#include "Animal.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class Wolf.
 *
 */
class Wolf : public Animal {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_WOLF
public:
    class Wolf& operator=(class Wolf const &) = delete;
    Wolf(class Wolf const &) = delete;
    Wolf() = delete;
#endif

public:
    virtual ~Wolf();
    virtual void __unk_vfn_41();
    virtual void normalTick();
    virtual void addPassenger(class Actor &);
    virtual void __unk_vfn_61();
    virtual void __unk_vfn_68();
    virtual void __unk_vfn_82();
    virtual void __unk_vfn_85();
    virtual void __unk_vfn_88();
    virtual void __unk_vfn_96();
    virtual void __unk_vfn_99();
    virtual void __unk_vfn_106();
    virtual void __unk_vfn_108();
    virtual void __unk_vfn_109();
    virtual void __unk_vfn_111();
    virtual void setSitting(bool);
    virtual enum LevelSoundEvent getAmbientSound() const;
    virtual void handleEntityEvent(enum ActorEvent, int);
    virtual bool load(class CompoundTag const &, class DataLoadHelper &);
    virtual void __unk_vfn_182();
    virtual void onSynchedDataUpdate(int);
    virtual void __unk_vfn_196();
    virtual void __unk_vfn_222();
    virtual void __unk_vfn_223();
    virtual void __unk_vfn_248();
    virtual void __unk_vfn_251();
    virtual void __unk_vfn_269();
    virtual bool _hurt(class ActorDamageSource const &, float, bool, bool);
    virtual void __unk_vfn_277();
    virtual void __unk_vfn_285();
    virtual void __unk_vfn_313();
    virtual bool isAlliedTo(class Mob *);
    virtual void __unk_vfn_317();
    virtual void onBorn(class Actor &, class Actor &);
    virtual void __unk_vfn_351();
    virtual void newServerAiStep();
    virtual void __unk_vfn_365();
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_WOLF
#endif
    MCAPI Wolf(class ActorDefinitionGroup *, struct ActorDefinitionIdentifier const &, class EntityContext &);
    MCAPI float getHeadRollAngle(float);
    MCAPI float getShakeAnim() const;
    MCAPI float getTailAngle();
    MCAPI bool isShaking() const;
    MCAPI void postNormalTick();

//private:
    MCAPI void _avoidSnowBury();

private:

};