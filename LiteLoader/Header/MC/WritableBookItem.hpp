/**
 * @file  WritableBookItem.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Json.hpp"
#include "Item.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class WritableBookItem.
 *
 */
class WritableBookItem : public Item {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_WRITABLEBOOKITEM
public:
    class WritableBookItem& operator=(class WritableBookItem const &) = delete;
    WritableBookItem(class WritableBookItem const &) = delete;
    WritableBookItem() = delete;
#endif

public:
    virtual ~WritableBookItem();
    virtual void __unk_vfn_7();
    virtual void __unk_vfn_11();
    virtual void __unk_vfn_14();
    virtual void __unk_vfn_16();
    virtual void __unk_vfn_52();
    virtual void __unk_vfn_54();
    virtual bool requiresInteract() const;
    virtual void __unk_vfn_67();
    virtual void __unk_vfn_71();
    virtual void __unk_vfn_72();
    virtual void __unk_vfn_73();
    virtual void __unk_vfn_76();
    virtual void __unk_vfn_80();
    virtual void __unk_vfn_81();
    virtual class ItemStack & use(class ItemStack &, class Player &) const;
    virtual std::string getInteractText(class Player const &) const;
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_WRITABLEBOOKITEM
#endif
    MCAPI WritableBookItem(std::string const &, int);
    MCAPI static void addPageAt(class ItemStack &, int, struct PageContent const &);
    MCAPI static struct PageContent deletePage(class ItemStack &, int);
    MCAPI static void replacePage(class ItemStack &, int, struct PageContent const &);
    MCAPI static void signBook(class ItemStack &, std::string, std::string, std::string);
    MCAPI static void swapPages(class ItemStack &, int, int);

};