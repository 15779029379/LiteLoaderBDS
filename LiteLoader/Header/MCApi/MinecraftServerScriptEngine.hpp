// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
class MinecraftServerScriptEngine {
public:
    virtual();
    virtual void unk_vfn_1();
    virtual void unk_vfn_2();
    virtual void unk_vfn_3();
    virtual int /*enum EventResult*/ onServerLevelInitialized(class ServerInstance&, class Level&);
    virtual int /*enum EventResult*/ onServerUpdateStart(class ServerInstance&);
    virtual int /*enum EventResult*/ onServerUpdateEnd(class ServerInstance&);
    virtual void unk_vfn_7();
    virtual void unk_vfn_8();
    virtual int /*enum EventResult*/ onServerThreadStarted(class ServerInstance&);
    virtual void unk_vfn_10();
    virtual void unk_vfn_11();
    virtual int /*enum EventResult*/ onLeaveGameDone(struct ServerInstanceEvent const&);
    virtual void unk_vfn_13();
    virtual void unk_vfn_14();
    virtual void unk_vfn_15();
    virtual void unk_vfn_16();
    virtual void unk_vfn_17();
    virtual void unk_vfn_18();
    virtual void unk_vfn_19();
    virtual void unk_vfn_20();
    virtual void unk_vfn_21();
    virtual void unk_vfn_22();
    virtual void unk_vfn_23();
    virtual void unk_vfn_24();
    virtual void unk_vfn_25();

private:
    MCAPI void _queueResourcePackScripts(class ResourcePackManager&);
    MCAPI void _registerEventListeners(class Level&, class NetworkHandler&);
    MCAPI void _setupContext(class Minecraft&, class PacketSender&, class entt::basic_registry<enum entt::entity>&);
    MCAPI void _unregisterEventListeners(class Level*, class NetworkHandler&);
};