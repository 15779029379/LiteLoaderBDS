// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
class OceanRuinStart : public TemplateStructurePiece {
public:
    virtual ~OceanRuinStart();
    virtual void moveBoundingBox(int, int, int);
    virtual void unk_vfn_2();
    virtual int /*enum StructurePieceType*/ getType();
    virtual void addChildren(class StructurePiece&, std::vector<std::unique_ptr<class StructurePiece>>&, class Random&);
    virtual void postProcessMobsAt(class BlockSource&, class Random&, class BoundingBox const&);
    virtual int getWorldX(int, int);
    virtual int getWorldZ(int, int);
    virtual void placeBlock(class BlockSource&, class Block const&, int, int, int, class BoundingBox const&);
    virtual bool canBeReplaced(class BlockSource&, int, int, int, class BoundingBox const&);
    virtual void unk_vfn_14();
    virtual void unk_vfn_16();
    virtual void unk_vfn_17();

public:
    MCAPI void createRuin(class Dimension&, class OverworldGenerator&, class Random&, int, int);
};