// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#include <Global.h>
class Option {
public:
    virtual ~Option();
    virtual void save(std::vector<struct std::pair<std::string, std::string>>&);
    virtual void load(class Json::Value const&);
    virtual void load(class std::map<std::string, std::string, struct std::less<std::string>, class std::allocator<struct std::pair<std::string const, std::string>>>&);
    virtual void load(std::string const&);

public:
    MCAPI bool getBool() const;
    MCAPI class Bedrock::PubSub::Subscription registerLock(class std::function<void(bool&)>);
    MCAPI class Bedrock::PubSub::Subscription registerObserver(class std::function<void(class Option const&)>);

    MCAPI static bool read(std::string const&, bool&);
};